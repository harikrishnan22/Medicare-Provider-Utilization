<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.1017.1259                               -->
<workbook source-build='2019.3.1 (20193.19.1017.1259)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
    <color-palette custom='true' name='my custom2' type='ordered-diverging'>
      <color>#0496ff</color>
      <color>#006ba6</color>
      <color>#ffbc42</color>
      <color>#d81159</color>
      <color>#8f2d56</color>
    </color-palette>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='P-State' datatype='string' name='[State Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;OH&quot;'>
        <calculation class='tableau' formula='&quot;OH&quot;' />
        <members>
          <member value='&quot;AK&quot;' />
          <member value='&quot;AL&quot;' />
          <member value='&quot;AR&quot;' />
          <member value='&quot;AZ&quot;' />
          <member value='&quot;CA&quot;' />
          <member value='&quot;CO&quot;' />
          <member value='&quot;CT&quot;' />
          <member value='&quot;DC&quot;' />
          <member value='&quot;DE&quot;' />
          <member value='&quot;FL&quot;' />
          <member value='&quot;GA&quot;' />
          <member value='&quot;HI&quot;' />
          <member value='&quot;IA&quot;' />
          <member value='&quot;ID&quot;' />
          <member value='&quot;IL&quot;' />
          <member value='&quot;IN&quot;' />
          <member value='&quot;KS&quot;' />
          <member value='&quot;KY&quot;' />
          <member value='&quot;LA&quot;' />
          <member value='&quot;MA&quot;' />
          <member value='&quot;MD&quot;' />
          <member value='&quot;ME&quot;' />
          <member value='&quot;MI&quot;' />
          <member value='&quot;MN&quot;' />
          <member value='&quot;MO&quot;' />
          <member value='&quot;MS&quot;' />
          <member value='&quot;MT&quot;' />
          <member value='&quot;NC&quot;' />
          <member value='&quot;ND&quot;' />
          <member value='&quot;NE&quot;' />
          <member value='&quot;NH&quot;' />
          <member value='&quot;NJ&quot;' />
          <member value='&quot;NM&quot;' />
          <member value='&quot;NV&quot;' />
          <member value='&quot;NY&quot;' />
          <member value='&quot;OH&quot;' />
          <member value='&quot;OK&quot;' />
          <member value='&quot;OR&quot;' />
          <member value='&quot;PA&quot;' />
          <member value='&quot;RI&quot;' />
          <member value='&quot;SC&quot;' />
          <member value='&quot;SD&quot;' />
          <member value='&quot;TN&quot;' />
          <member value='&quot;TX&quot;' />
          <member value='&quot;UT&quot;' />
          <member value='&quot;VA&quot;' />
          <member value='&quot;VT&quot;' />
          <member value='&quot;WA&quot;' />
          <member value='&quot;WI&quot;' />
          <member value='&quot;WV&quot;' />
          <member value='&quot;WY&quot;' />
        </members>
      </column>
      <column caption='P-Year' datatype='string' datatype-customized='true' name='[Year Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;2015&quot;'>
        <calculation class='tableau' formula='&quot;2015&quot;' />
        <members>
          <member value='&quot;2013&quot;' />
          <member value='&quot;2014&quot;' />
          <member value='&quot;2015&quot;' />
          <member value='&quot;2016&quot;' />
          <member value='&quot;2017&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='DESKTOP-0DCI330' inline='true' name='federated.098mdgi0cpuoiu17m3k3l0c7fuad' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DESKTOP-0DCI330' name='sqlserver.04grvsr1r818nn0zwxttu0c2b34b'>
            <connection authentication='sspi' class='sqlserver' dbname='Project_dwbi' odbc-native-protocol='yes' one-time-sql='' server='DESKTOP-0DCI330' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[DIM_State].[State_id]' />
                <expression op='[Fact_DrugOverdoseDeaths].[State_id]' />
              </expression>
              <expression op='='>
                <expression op='[DIM_Year].[Year_id]' />
                <expression op='[Fact_DrugOverdoseDeaths].[Year_id]' />
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Fact_UtilizationPayment].[Drug_id]' />
                <expression op='[DIM_Drug].[Drug_id]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='AND'>
                  <expression op='='>
                    <expression op='[DIM_Provider].[NPI_id]' />
                    <expression op='[Fact_UtilizationPayment].[NPI_id]' />
                  </expression>
                  <expression op='='>
                    <expression op='[DIM_Speciality].[Speciality_id]' />
                    <expression op='[Fact_UtilizationPayment].[Speciality_id]' />
                  </expression>
                  <expression op='='>
                    <expression op='[DIM_State].[State_id]' />
                    <expression op='[Fact_UtilizationPayment].[State_id]' />
                  </expression>
                  <expression op='='>
                    <expression op='[DIM_Year].[Year_id]' />
                    <expression op='[Fact_UtilizationPayment].[Year_id]' />
                  </expression>
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Fact_ProviderCounts].[Year_id]' />
                    <expression op='[DIM_Year].[Year_id]' />
                  </expression>
                </clause>
                <relation join='inner' type='join'>
                  <clause type='join'>
                    <expression op='AND'>
                      <expression op='='>
                        <expression op='[DIM_Provider].[State_id]' />
                        <expression op='[DIM_State].[State_id]' />
                      </expression>
                      <expression op='='>
                        <expression op='[Fact_ProviderCounts].[State_id]' />
                        <expression op='[DIM_State].[State_id]' />
                      </expression>
                    </expression>
                  </clause>
                  <relation join='inner' type='join'>
                    <clause type='join'>
                      <expression op='AND'>
                        <expression op='='>
                          <expression op='[DIM_Provider].[Speciality_id]' />
                          <expression op='[DIM_Speciality].[Speciality_id]' />
                        </expression>
                        <expression op='='>
                          <expression op='[Fact_ProviderCounts].[Speciality_id]' />
                          <expression op='[DIM_Speciality].[Speciality_id]' />
                        </expression>
                      </expression>
                    </clause>
                    <relation join='inner' type='join'>
                      <clause type='join'>
                        <expression op='='>
                          <expression op='[Fact_ProviderCounts].[NPI_id]' />
                          <expression op='[DIM_Provider].[NPI_id]' />
                        </expression>
                      </clause>
                      <relation connection='sqlserver.04grvsr1r818nn0zwxttu0c2b34b' name='Fact_ProviderCounts' table='[dbo].[Fact_ProviderCounts]' type='table' />
                      <relation connection='sqlserver.04grvsr1r818nn0zwxttu0c2b34b' name='DIM_Provider' table='[dbo].[DIM_Provider]' type='table' />
                    </relation>
                    <relation connection='sqlserver.04grvsr1r818nn0zwxttu0c2b34b' name='DIM_Speciality' table='[dbo].[DIM_Speciality]' type='table' />
                  </relation>
                  <relation connection='sqlserver.04grvsr1r818nn0zwxttu0c2b34b' name='DIM_State' table='[dbo].[DIM_State]' type='table' />
                </relation>
                <relation connection='sqlserver.04grvsr1r818nn0zwxttu0c2b34b' name='DIM_Year' table='[dbo].[DIM_Year]' type='table' />
              </relation>
              <relation connection='sqlserver.04grvsr1r818nn0zwxttu0c2b34b' name='Fact_UtilizationPayment' table='[dbo].[Fact_UtilizationPayment]' type='table' />
            </relation>
            <relation connection='sqlserver.04grvsr1r818nn0zwxttu0c2b34b' name='DIM_Drug' table='[dbo].[DIM_Drug]' type='table' />
          </relation>
          <relation connection='sqlserver.04grvsr1r818nn0zwxttu0c2b34b' name='Fact_DrugOverdoseDeaths' table='[dbo].[Fact_DrugOverdoseDeaths]' type='table' />
        </relation>
        <cols>
          <map key='[Bene Count]' value='[Fact_UtilizationPayment].[Bene Count]' />
          <map key='[Deaths]' value='[Fact_DrugOverdoseDeaths].[Deaths]' />
          <map key='[Drug Name]' value='[DIM_Drug].[Drug Name]' />
          <map key='[Drug_id (DIM_Drug)]' value='[DIM_Drug].[Drug_id]' />
          <map key='[Drug_id]' value='[Fact_UtilizationPayment].[Drug_id]' />
          <map key='[FD_id]' value='[Fact_DrugOverdoseDeaths].[FD_id]' />
          <map key='[FPC_id]' value='[Fact_ProviderCounts].[FPC_id]' />
          <map key='[FUP_id]' value='[Fact_UtilizationPayment].[FUP_id]' />
          <map key='[First Name]' value='[DIM_Provider].[First Name]' />
          <map key='[Flag]' value='[DIM_Speciality].[Flag]' />
          <map key='[Generic Name]' value='[DIM_Drug].[Generic Name]' />
          <map key='[Last Name]' value='[DIM_Provider].[Last Name]' />
          <map key='[NPI]' value='[DIM_Provider].[NPI]' />
          <map key='[NPI_id (DIM_Provider)]' value='[DIM_Provider].[NPI_id]' />
          <map key='[NPI_id (Fact_UtilizationPayment)]' value='[Fact_UtilizationPayment].[NPI_id]' />
          <map key='[NPI_id]' value='[Fact_ProviderCounts].[NPI_id]' />
          <map key='[Opioid Claim Count]' value='[Fact_ProviderCounts].[Opioid Claim Count]' />
          <map key='[Opioid Prescribing Rate]' value='[Fact_ProviderCounts].[Opioid Prescribing Rate]' />
          <map key='[Speciality Desc]' value='[DIM_Speciality].[Speciality Desc]' />
          <map key='[Speciality_id (DIM_Provider)]' value='[DIM_Provider].[Speciality_id]' />
          <map key='[Speciality_id (DIM_Speciality)]' value='[DIM_Speciality].[Speciality_id]' />
          <map key='[Speciality_id (Fact_UtilizationPayment)]' value='[Fact_UtilizationPayment].[Speciality_id]' />
          <map key='[Speciality_id]' value='[Fact_ProviderCounts].[Speciality_id]' />
          <map key='[State]' value='[DIM_State].[State]' />
          <map key='[State_id (DIM_Provider)]' value='[DIM_Provider].[State_id]' />
          <map key='[State_id (DIM_State)]' value='[DIM_State].[State_id]' />
          <map key='[State_id (Fact_DrugOverdoseDeaths)]' value='[Fact_DrugOverdoseDeaths].[State_id]' />
          <map key='[State_id (Fact_UtilizationPayment)]' value='[Fact_UtilizationPayment].[State_id]' />
          <map key='[State_id]' value='[Fact_ProviderCounts].[State_id]' />
          <map key='[Total 30 day fill Count]' value='[Fact_UtilizationPayment].[Total 30 day fill Count]' />
          <map key='[Total Claim Count (Fact_UtilizationPayment)]' value='[Fact_UtilizationPayment].[Total Claim Count]' />
          <map key='[Total Claim Count]' value='[Fact_ProviderCounts].[Total Claim Count]' />
          <map key='[Total day supply]' value='[Fact_UtilizationPayment].[Total day supply]' />
          <map key='[Total drug cost]' value='[Fact_UtilizationPayment].[Total drug cost]' />
          <map key='[Year]' value='[DIM_Year].[Year]' />
          <map key='[Year_id (DIM_Year)]' value='[DIM_Year].[Year_id]' />
          <map key='[Year_id (Fact_DrugOverdoseDeaths)]' value='[Fact_DrugOverdoseDeaths].[Year_id]' />
          <map key='[Year_id (Fact_UtilizationPayment)]' value='[Fact_UtilizationPayment].[Year_id]' />
          <map key='[Year_id]' value='[Fact_ProviderCounts].[Year_id]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>FPC_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[FPC_id]</local-name>
            <parent-name>[Fact_ProviderCounts]</parent-name>
            <remote-alias>FPC_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NPI_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NPI_id]</local-name>
            <parent-name>[Fact_ProviderCounts]</parent-name>
            <remote-alias>NPI_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Claim Count</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Total Claim Count]</local-name>
            <parent-name>[Fact_ProviderCounts]</parent-name>
            <remote-alias>Total Claim Count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Opioid Claim Count</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Opioid Claim Count]</local-name>
            <parent-name>[Fact_ProviderCounts]</parent-name>
            <remote-alias>Opioid Claim Count</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Opioid Prescribing Rate</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Opioid Prescribing Rate]</local-name>
            <parent-name>[Fact_ProviderCounts]</parent-name>
            <remote-alias>Opioid Prescribing Rate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year_id]</local-name>
            <parent-name>[Fact_ProviderCounts]</parent-name>
            <remote-alias>Year_id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Speciality_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Speciality_id]</local-name>
            <parent-name>[Fact_ProviderCounts]</parent-name>
            <remote-alias>Speciality_id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[State_id]</local-name>
            <parent-name>[Fact_ProviderCounts]</parent-name>
            <remote-alias>State_id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NPI_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NPI_id (DIM_Provider)]</local-name>
            <parent-name>[DIM_Provider]</parent-name>
            <remote-alias>NPI_id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NPI</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NPI]</local-name>
            <parent-name>[DIM_Provider]</parent-name>
            <remote-alias>NPI</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Last Name]</local-name>
            <parent-name>[DIM_Provider]</parent-name>
            <remote-alias>Last Name</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>First Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[First Name]</local-name>
            <parent-name>[DIM_Provider]</parent-name>
            <remote-alias>First Name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[State_id (DIM_Provider)]</local-name>
            <parent-name>[DIM_Provider]</parent-name>
            <remote-alias>State_id</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Speciality_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Speciality_id (DIM_Provider)]</local-name>
            <parent-name>[DIM_Provider]</parent-name>
            <remote-alias>Speciality_id</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Speciality_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Speciality_id (DIM_Speciality)]</local-name>
            <parent-name>[DIM_Speciality]</parent-name>
            <remote-alias>Speciality_id</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Speciality Desc</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Speciality Desc]</local-name>
            <parent-name>[DIM_Speciality]</parent-name>
            <remote-alias>Speciality Desc</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flag</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Flag]</local-name>
            <parent-name>[DIM_Speciality]</parent-name>
            <remote-alias>Flag</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[State_id (DIM_State)]</local-name>
            <parent-name>[DIM_State]</parent-name>
            <remote-alias>State_id</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[DIM_State]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year_id (DIM_Year)]</local-name>
            <parent-name>[DIM_Year]</parent-name>
            <remote-alias>Year_id</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[DIM_Year]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FUP_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[FUP_id]</local-name>
            <parent-name>[Fact_UtilizationPayment]</parent-name>
            <remote-alias>FUP_id</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NPI_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NPI_id (Fact_UtilizationPayment)]</local-name>
            <parent-name>[Fact_UtilizationPayment]</parent-name>
            <remote-alias>NPI_id</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bene Count</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Bene Count]</local-name>
            <parent-name>[Fact_UtilizationPayment]</parent-name>
            <remote-alias>Bene Count</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Claim Count</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Total Claim Count (Fact_UtilizationPayment)]</local-name>
            <parent-name>[Fact_UtilizationPayment]</parent-name>
            <remote-alias>Total Claim Count</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total 30 day fill Count</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Total 30 day fill Count]</local-name>
            <parent-name>[Fact_UtilizationPayment]</parent-name>
            <remote-alias>Total 30 day fill Count</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total day supply</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Total day supply]</local-name>
            <parent-name>[Fact_UtilizationPayment]</parent-name>
            <remote-alias>Total day supply</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total drug cost</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Total drug cost]</local-name>
            <parent-name>[Fact_UtilizationPayment]</parent-name>
            <remote-alias>Total drug cost</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Drug_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Drug_id]</local-name>
            <parent-name>[Fact_UtilizationPayment]</parent-name>
            <remote-alias>Drug_id</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year_id (Fact_UtilizationPayment)]</local-name>
            <parent-name>[Fact_UtilizationPayment]</parent-name>
            <remote-alias>Year_id</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Speciality_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Speciality_id (Fact_UtilizationPayment)]</local-name>
            <parent-name>[Fact_UtilizationPayment]</parent-name>
            <remote-alias>Speciality_id</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[State_id (Fact_UtilizationPayment)]</local-name>
            <parent-name>[Fact_UtilizationPayment]</parent-name>
            <remote-alias>State_id</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Drug_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Drug_id (DIM_Drug)]</local-name>
            <parent-name>[DIM_Drug]</parent-name>
            <remote-alias>Drug_id</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Drug Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Drug Name]</local-name>
            <parent-name>[DIM_Drug]</parent-name>
            <remote-alias>Drug Name</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generic Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Generic Name]</local-name>
            <parent-name>[DIM_Drug]</parent-name>
            <remote-alias>Generic Name</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FD_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[FD_id]</local-name>
            <parent-name>[Fact_DrugOverdoseDeaths]</parent-name>
            <remote-alias>FD_id</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[State_id (Fact_DrugOverdoseDeaths)]</local-name>
            <parent-name>[Fact_DrugOverdoseDeaths]</parent-name>
            <remote-alias>State_id</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[Fact_DrugOverdoseDeaths]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year_id (Fact_DrugOverdoseDeaths)]</local-name>
            <parent-name>[Fact_DrugOverdoseDeaths]</parent-name>
            <remote-alias>Year_id</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Bene Count]' role='measure' type='quantitative' />
      <column caption='calc_State' datatype='string' name='[Calculation_1014154383129440262]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([State])' />
      </column>
      <column caption='Calc_Year' datatype='string' name='[Calculation_1014154383133872137]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([Year])' />
      </column>
      <column caption='calc_deaths' datatype='real' name='[Calculation_1014154383178223629]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM( { FIXED [State], [Year]: AVG([Deaths]) } )' />
      </column>
      <column caption='tcc year' datatype='integer' name='[Calculation_1275644636966346752]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Year]:SUM([Total Claim Count])}' />
      </column>
      <column caption='per unit cost' datatype='real' name='[Calculation_1818046917001592832]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Drug Name]:SUM([Total drug cost])/SUM([Total Claim Count])}' />
      </column>
      <column caption='cost per unit' datatype='real' name='[Calculation_1818046917002862593]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Total drug cost])/SUM([Total Claim Count])' />
      </column>
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='string' name='[Drug Name]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Drug id (DIM Drug)' datatype='integer' name='[Drug_id (DIM_Drug)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Drug id' datatype='integer' name='[Drug_id]' role='dimension' type='ordinal' />
      <column caption='FD id' datatype='integer' name='[FD_id]' role='dimension' type='ordinal' />
      <column caption='FPC id' datatype='integer' name='[FPC_id]' role='dimension' type='ordinal' />
      <column caption='FUP id' datatype='integer' name='[FUP_id]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[NPI]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='NPI id (DIM Provider)' datatype='integer' name='[NPI_id (DIM_Provider)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='NPI id (Fact UtilizationPayment)' datatype='integer' hidden='true' name='[NPI_id (Fact_UtilizationPayment)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='NPI id' datatype='integer' name='[NPI_id]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Opioid Claim Count]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Opioid Prescribing Rate]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Speciality id (DIM Provider)' datatype='integer' hidden='true' name='[Speciality_id (DIM_Provider)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Speciality id (DIM Speciality)' datatype='integer' name='[Speciality_id (DIM_Speciality)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Speciality id (Fact UtilizationPayment)' datatype='integer' hidden='true' name='[Speciality_id (Fact_UtilizationPayment)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Speciality id' datatype='integer' hidden='true' name='[Speciality_id]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' caption='State id (DIM Provider)' datatype='integer' hidden='true' name='[State_id (DIM_Provider)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='State id (DIM State)' datatype='integer' hidden='true' name='[State_id (DIM_State)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='State id (Fact DrugOverdoseDeaths)' datatype='integer' name='[State_id (Fact_DrugOverdoseDeaths)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='State id (Fact UtilizationPayment)' datatype='integer' hidden='true' name='[State_id (Fact_UtilizationPayment)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='State id' datatype='integer' hidden='true' name='[State_id]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Total 30 day fill Count]' role='measure' type='quantitative' />
      <column caption='Total Claim Count (Fact UtilizationPayment)' datatype='integer' name='[Total Claim Count (Fact_UtilizationPayment)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Claim Count]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total day supply]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total drug cost]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Year id (DIM Year)' datatype='integer' hidden='true' name='[Year_id (DIM_Year)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Year id (Fact DrugOverdoseDeaths)' datatype='integer' name='[Year_id (Fact_DrugOverdoseDeaths)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Year id (Fact UtilizationPayment)' datatype='integer' hidden='true' name='[Year_id (Fact_UtilizationPayment)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Year id' datatype='integer' name='[Year_id]' role='dimension' type='ordinal' />
      <column-instance column='[Deaths]' derivation='Attribute' name='[attr:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Opioid Prescribing Rate]' derivation='Attribute' name='[attr:Opioid Prescribing Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Opioid Prescribing Rate]' derivation='Avg' name='[avg:Opioid Prescribing Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total drug cost]' derivation='Avg' name='[avg:Total drug cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='CountD' name='[ctd:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Drug Name]' derivation='None' name='[none:Drug Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[NPI_id (DIM_Provider)]' derivation='None' name='[none:NPI_id (DIM_Provider):ok]' pivot='key' type='ordinal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Total drug cost]' derivation='None' name='[none:Total drug cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Bene Count]' derivation='Sum' name='[sum:Bene Count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NPI]' derivation='Sum' name='[sum:NPI:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Opioid Claim Count]' derivation='Sum' name='[sum:Opioid Claim Count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Opioid Prescribing Rate]' derivation='Sum' name='[sum:Opioid Prescribing Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total 30 day fill Count]' derivation='Sum' name='[sum:Total 30 day fill Count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Claim Count (Fact_UtilizationPayment)]' derivation='Sum' name='[sum:Total Claim Count (Fact_UtilizationPayment):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Claim Count]' derivation='Sum' name='[sum:Total Claim Count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total day supply]' derivation='Sum' name='[sum:Total day supply:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total drug cost]' derivation='Sum' name='[sum:Total drug cost:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.539259' measure-ordering='alphabetic' measure-percentage='0.383704' parameter-percentage='0.077037' rowDisplayCount='555555' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Drug Name:nk]' palette='tableau-10' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;FENTANYL&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;MORPHINE SULFATE ER&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BELBUCA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ENDOCET&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LORCET 10-650&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OXYCODONE CONCENTRATE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SYNALGOS-DC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ZAMICET&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ABSTRAL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CONZIP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HYDROMORPHONE ER&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PERCOCET&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;VICODIN ES&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ACTIQ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DISKETS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KADIAN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NUCYNTA ER&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ROXICODONE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;XODOL 7.5-300&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BUTALB-CAFF-ACETAMINOPH-CODEIN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FENTANYL CITRATE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MAGNACET&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OXYCODONE HCL-ASPIRIN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TRAMADOL HCL-ACETAMINOPHEN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BELLADONNA-OPIUM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ENDODAN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LORCET HD&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;OXYCODONE HCL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TOPIRAMATE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ZOHYDRO ER&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ASCOMP WITH CODEINE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DOLOPHINE HCL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LAZANDA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;OPANA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RYBIX ODT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;XODOL 10-300&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;OXYCONTIN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CO-GESIC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MORPHABOND ER&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PENTAZOCINE-ACETAMINOPHEN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ULTRAM ER&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ACETAMIN-CAFF-DIHYDROCODEINE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DEMEROL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HYDROMORPHONE HCL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MS CONTIN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PRIMLEV&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VICODIN HP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CARISOPRODOL COMPOUND-CODEINE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HYCET&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;METHADONE INTENSOL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;OXYMORPHONE HCL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ULTRACET&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ASPIRIN-CAFFEINE-DIHYDROCODEIN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DURAGESIC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LEVORPHANOL TARTRATE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;OPANA ER&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;STAGESIC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;XTAMPZA ER&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BUTALBITAL COMPOUND-CODEINE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FENTORA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MEPERIDINE HCL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;OXYCODONE HCL-IBUPROFEN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TREZIX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BUTORPHANOL TARTRATE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FIORICET WITH CODEINE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MEPERITAB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TYLENOL-CODEINE NO.3&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CARISOPRODOL-ASPIRIN-CODEINE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HYDROCODONE BIT-IBUPROFEN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;METHADOSE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OXYMORPHONE HCL ER&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ULTRAM&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;HYDROCODONE-ACETAMINOPHEN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CODEINE SULFATE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HYDROCODONE-IBUPROFEN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MORPHINE SULFATE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PENTAZOCINE-NALOXONE HCL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VICODIN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BUPRENORPHINE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EXALGO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LORCET PLUS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;OXYCODONE HCL ER&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TRAMADOL HCL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ZYDONE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AVINZA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EMBEDA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LORCET&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OXECTA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SUBSYS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;XYLON 10&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ACETAMINOPH-CAFF-DIHYDROCODEIN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DIHYDROCODEIN-ACETAMINOPH-CAFF&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HYSINGLA ER&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NORCO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;REPREXAIN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VICOPROFEN&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;OXYCODONE-ACETAMINOPHEN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BUTRANS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FIORINAL WITH CODEINE \#3&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;METHADONE HCL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TYLENOL-CODEINE NO.4&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BUTALB-ACETAMINOPH-CAFF-CODEIN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LORTAB&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OXYCODONE HCL-ACETAMINOPHEN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TRAMADOL HCL ER&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ACETAMINOPHEN-CODEINE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DILAUDID&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IBUDONE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NUCYNTA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ROXICET&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;XARTEMIS XR&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Total Claim Count (Fact_UtilizationPayment):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Bene Count:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Total day supply:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[attr:Opioid Prescribing Rate:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[avg:Opioid Prescribing Rate:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Opioid Prescribing Rate:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[attr:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[ctd:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Opioid Claim Count:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Total 30 day fill Count:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[avg:Total drug cost:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:Total drug cost:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Total drug cost:qk]&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Total Claim Count:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:NPI:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Number of Records:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:NPI_id (DIM_Provider):ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#e15759'>
              <bucket>4</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Fact_DrugOverdoseDeaths+ (Project_dwbi)' inline='true' name='federated.0x5eicl13i6ys2169zn7d1b1du8j' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DESKTOP-0DCI330' name='sqlserver.0p2e1r50vv8b2717wcj0v192n6fl'>
            <connection authentication='sspi' class='sqlserver' dbname='Project_dwbi' odbc-native-protocol='yes' one-time-sql='' server='DESKTOP-0DCI330' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Fact_DrugOverdoseDeaths].[Year_id]' />
              <expression op='[DIM_Year].[Year_id]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Fact_DrugOverdoseDeaths].[State_id]' />
                <expression op='[DIM_State].[State_id]' />
              </expression>
            </clause>
            <relation connection='sqlserver.0p2e1r50vv8b2717wcj0v192n6fl' name='Fact_DrugOverdoseDeaths' table='[dbo].[Fact_DrugOverdoseDeaths]' type='table' />
            <relation connection='sqlserver.0p2e1r50vv8b2717wcj0v192n6fl' name='DIM_State' table='[dbo].[DIM_State]' type='table' />
          </relation>
          <relation connection='sqlserver.0p2e1r50vv8b2717wcj0v192n6fl' name='DIM_Year' table='[dbo].[DIM_Year]' type='table' />
        </relation>
        <cols>
          <map key='[Deaths]' value='[Fact_DrugOverdoseDeaths].[Deaths]' />
          <map key='[FD_id]' value='[Fact_DrugOverdoseDeaths].[FD_id]' />
          <map key='[State]' value='[DIM_State].[State]' />
          <map key='[State_id (DIM_State)]' value='[DIM_State].[State_id]' />
          <map key='[State_id]' value='[Fact_DrugOverdoseDeaths].[State_id]' />
          <map key='[Year]' value='[DIM_Year].[Year]' />
          <map key='[Year_id (DIM_Year)]' value='[DIM_Year].[Year_id]' />
          <map key='[Year_id]' value='[Fact_DrugOverdoseDeaths].[Year_id]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>FD_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[FD_id]</local-name>
            <parent-name>[Fact_DrugOverdoseDeaths]</parent-name>
            <remote-alias>FD_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[State_id]</local-name>
            <parent-name>[Fact_DrugOverdoseDeaths]</parent-name>
            <remote-alias>State_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[Fact_DrugOverdoseDeaths]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year_id]</local-name>
            <parent-name>[Fact_DrugOverdoseDeaths]</parent-name>
            <remote-alias>Year_id</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[State_id (DIM_State)]</local-name>
            <parent-name>[DIM_State]</parent-name>
            <remote-alias>State_id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[DIM_State]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year_id (DIM_Year)]</local-name>
            <parent-name>[DIM_Year]</parent-name>
            <remote-alias>Year_id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[DIM_Year]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column caption='FD id' datatype='integer' name='[FD_id]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' caption='State id (DIM State)' datatype='integer' name='[State_id (DIM_State)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='State id' datatype='integer' name='[State_id]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Year id (DIM Year)' datatype='integer' name='[Year_id (DIM_Year)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Year id' datatype='integer' name='[Year_id]' role='dimension' type='ordinal' />
      <column-instance column='[Year]' derivation='Attribute' name='[attr:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.525926' measure-ordering='alphabetic' measure-percentage='0.294815' parameter-percentage='0.179259' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0x5eicl13i6ys2169zn7d1b1du8j].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0x5eicl13i6ys2169zn7d1b1du8j]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Year:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%many-values%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Year:ok]' palette='cyclic_10_0' type='palette'>
            <map to='#316f96'>
              <bucket>2017</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>2016</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>2015</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Deaths by year and state'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Fact_DrugOverdoseDeaths+ (Project_dwbi)' name='federated.0x5eicl13i6ys2169zn7d1b1du8j' />
          </datasources>
          <datasource-dependencies datasource='federated.0x5eicl13i6ys2169zn7d1b1du8j'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0x5eicl13i6ys2169zn7d1b1du8j].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0x5eicl13i6ys2169zn7d1b1du8j].[sum:Deaths:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x5eicl13i6ys2169zn7d1b1du8j].[sum:Deaths:qk]' field-type='quantitative' max='7677' min='-239' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0x5eicl13i6ys2169zn7d1b1du8j].[none:Year:ok]' />
              <text column='[federated.0x5eicl13i6ys2169zn7d1b1du8j].[sum:Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='9' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x5eicl13i6ys2169zn7d1b1du8j].[none:State:nk]</rows>
        <cols>[federated.0x5eicl13i6ys2169zn7d1b1du8j].[sum:Deaths:qk]</cols>
      </table>
      <simple-id uuid='{94DC4CFC-52E2-4F50-82A4-2AFE40F409CB}' />
    </worksheet>
    <worksheet name='Heat Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Heat Map for Total Drug Costs among States</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DESKTOP-0DCI330' name='federated.098mdgi0cpuoiu17m3k3l0c7fuad' />
          </datasources>
          <datasource-dependencies datasource='federated.098mdgi0cpuoiu17m3k3l0c7fuad'>
            <column caption='Calc_Year' datatype='string' name='[Calculation_1014154383133872137]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([Year])' />
            </column>
            <column datatype='string' name='[Drug Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total drug cost]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1014154383133872137]' derivation='None' name='[none:Calculation_1014154383133872137:nk]' pivot='key' type='nominal' />
            <column-instance column='[Drug Name]' derivation='None' name='[none:Drug Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total drug cost]' derivation='Sum' name='[sum:Total drug cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:Drug Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ABSTRAL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ACETAMIN-CAFF-DIHYDROCODEINE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ACETAMINOPH-CAFF-DIHYDROCODEIN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ACETAMINOPHEN-CODEINE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ACTIQ&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ARYMO ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ASA-BUTALB-CAFFEINE-CODEINE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ASCOMP WITH CODEINE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ASPIRIN-CAFFEINE-DIHYDROCODEIN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;AVINZA&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;BELBUCA&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;BELLADONNA-OPIUM&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;BUPRENORPHINE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;BUTALB-ACETAMINOPH-CAFF-CODEIN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;BUTALB-CAFF-ACETAMINOPH-CODEIN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;BUTALBITAL COMPOUND-CODEINE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;BUTORPHANOL TARTRATE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;BUTRANS&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;CAPITAL W-CODEINE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;CARISOPRODOL COMPOUND-CODEINE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;CARISOPRODOL-ASPIRIN-CODEINE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;CO-GESIC&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;CODEINE SULFATE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;CONZIP&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;DEMEROL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;DIHYDROCODEIN-ACETAMINOPH-CAFF&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;DILAUDID&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;DISKETS&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;DOLOPHINE HCL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;DURAGESIC&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;EMBEDA&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ENDOCET&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ENDODAN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;EXALGO&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;FENTANYL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;FENTANYL CITRATE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;FENTORA&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;FIORICET WITH CODEINE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;FIORINAL WITH CODEINE \#3&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;HYCET&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;HYDROCODONE BIT-IBUPROFEN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;HYDROCODONE-ACETAMINOPHEN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;HYDROCODONE-IBUPROFEN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;HYDROMORPHONE ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;HYDROMORPHONE HCL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;HYSINGLA ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;IBUDONE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;KADIAN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;LAZANDA&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;LEVORPHANOL TARTRATE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;LORCET&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;LORCET 10-650&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;LORCET HD&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;LORCET PLUS&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;LORTAB&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;MAGNACET&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;MAXIDONE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;MEPERIDINE HCL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;MEPERITAB&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;METHADONE HCL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;METHADONE INTENSOL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;METHADOSE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;MORPHABOND ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;MORPHINE SULFATE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;MORPHINE SULFATE ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;MS CONTIN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;NORCO&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;NUCYNTA&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;NUCYNTA ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OPANA&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OPANA ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXAYDO&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXECTA&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYCODONE CONCENTRATE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYCODONE HCL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYCODONE HCL ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYCODONE HCL-ACETAMINOPHEN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYCODONE HCL-ASPIRIN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYCODONE HCL-IBUPROFEN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYCODONE-ACETAMINOPHEN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYCODONE-ASPIRIN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYCONTIN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYMORPHONE HCL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYMORPHONE HCL ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;PENTAZOCINE-ACETAMINOPHEN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;PENTAZOCINE-NALOXONE HCL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;PERCOCET&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;PERCODAN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;PRIMLEV&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;REPREXAIN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ROXICET&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ROXICODONE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;RYBIX ODT&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;RYZOLT&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;STAGESIC&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;SUBSYS&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;SYNALGOS-DC&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;THERATRAMADOL-60&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;TOPIRAMATE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;TRAMADOL HCL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;TRAMADOL HCL ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;TRAMADOL HCL-ACETAMINOPHEN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;TREZIX&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;TYLENOL-CODEINE NO.3&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;TYLENOL-CODEINE NO.4&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;TYLOX&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ULTRACET&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ULTRAM&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ULTRAM ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;VICODIN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;VICODIN ES&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;VICODIN HP&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;VICOPROFEN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;XARTEMIS XR&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;XODOL 10-300&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;XODOL 5-300&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;XODOL 7.5-300&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;XTAMPZA ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;XYLON 10&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ZAMICET&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ZOHYDRO ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ZOLVIT&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ZYDONE&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;ME&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NM&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OK&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;TN&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;VT&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Total drug cost:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:Calculation_1014154383133872137:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Total drug cost:qk]' shelf='columns'>
              <sort-filter-info>
                <sort-filter level-name='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:State:nk]' member-value='&quot;NC&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:Drug Name:nk]</column>
            <column>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:Calculation_1014154383133872137:nk]' value='142' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='normal' />
            <format attr='font-weight' field='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:State:nk]' value='bold' />
            <format attr='color' field='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:State:nk]' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Total drug cost:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Total drug cost:qk]' />
              <text column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Total drug cost:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:State:nk]</rows>
        <cols>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:Calculation_1014154383133872137:nk]</cols>
      </table>
      <simple-id uuid='{15A675E6-EA61-44C3-A0DD-6E4E2E31FA60}' />
    </worksheet>
    <worksheet name='Map based deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='Fact_DrugOverdoseDeaths+ (Project_dwbi)' name='federated.0x5eicl13i6ys2169zn7d1b1du8j' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0x5eicl13i6ys2169zn7d1b1du8j'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x5eicl13i6ys2169zn7d1b1du8j].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;AK&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;HI&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x5eicl13i6ys2169zn7d1b1du8j].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x5eicl13i6ys2169zn7d1b1du8j].[Longitude (generated)]' field-type='quantitative' max='-4938781.764223652' min='-14419453.975993469' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0x5eicl13i6ys2169zn7d1b1du8j].[Latitude (generated)]' field-type='quantitative' max='7312603.0289773634' min='1767449.7579880981' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0x5eicl13i6ys2169zn7d1b1du8j].[none:State:nk]' value='#fcfcfc' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x5eicl13i6ys2169zn7d1b1du8j].[sum:Deaths:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#188d10</color>
                <color>#2f9928</color>
                <color>#4aa644</color>
                <color>#68b363</color>
                <color>#8abf87</color>
                <color>#b0ccae</color>
                <color>#d9d9d9</color>
                <color>#d5c1c1</color>
                <color>#d1a9a9</color>
                <color>#ce9393</color>
                <color>#ca7d7d</color>
                <color>#c66868</color>
                <color>#c35454</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-0-boundaries-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute' value='false' />
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.44999998807907104' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0x5eicl13i6ys2169zn7d1b1du8j].[sum:Deaths:qk]' />
              <text column='[federated.0x5eicl13i6ys2169zn7d1b1du8j].[sum:Deaths:qk]' />
              <text column='[federated.0x5eicl13i6ys2169zn7d1b1du8j].[none:State:nk]' />
              <lod column='[federated.0x5eicl13i6ys2169zn7d1b1du8j].[none:State:nk]' />
              <geometry column='[federated.0x5eicl13i6ys2169zn7d1b1du8j].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='2.2872927188873291' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-transparency' value='242' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x5eicl13i6ys2169zn7d1b1du8j].[Latitude (generated)]</rows>
        <cols>[federated.0x5eicl13i6ys2169zn7d1b1du8j].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3FDCD535-A808-40C3-9A10-55D1EBBDE2E5}' />
    </worksheet>
    <worksheet name='Providers Total claims per year line graph'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Providers Total Claims  per Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DESKTOP-0DCI330' name='federated.098mdgi0cpuoiu17m3k3l0c7fuad' />
          </datasources>
          <datasource-dependencies datasource='federated.098mdgi0cpuoiu17m3k3l0c7fuad'>
            <column datatype='string' name='[First Name]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='NPI id (DIM Provider)' datatype='integer' name='[NPI_id (DIM_Provider)]' role='dimension' type='ordinal' />
            <column caption='Total Claim Count (Fact UtilizationPayment)' datatype='integer' name='[Total Claim Count (Fact_UtilizationPayment)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[First Name]' derivation='None' name='[none:First Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[NPI_id (DIM_Provider)]' derivation='None' name='[none:NPI_id (DIM_Provider):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Claim Count (Fact_UtilizationPayment)]' derivation='Sum' name='[sum:Total Claim Count (Fact_UtilizationPayment):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:NPI_id (DIM_Provider):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NPI_id (DIM_Provider):ok]' member='1' />
              <groupfilter function='member' level='[none:NPI_id (DIM_Provider):ok]' member='2' />
              <groupfilter function='member' level='[none:NPI_id (DIM_Provider):ok]' member='3' />
              <groupfilter function='member' level='[none:NPI_id (DIM_Provider):ok]' member='4' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:NPI_id (DIM_Provider):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:Year:qk]' field-type='quantitative' max='2017' min='2013' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:NPI_id (DIM_Provider):ok]' />
              <text column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:First Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Total Claim Count (Fact_UtilizationPayment):qk]</rows>
        <cols>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{26D60363-9FBB-47A0-806B-FED0B6164E50}' />
    </worksheet>
    <worksheet name='donut chart OPR'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Donut Chart Opioid Prescribing Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DESKTOP-0DCI330' name='federated.098mdgi0cpuoiu17m3k3l0c7fuad' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='P-State' datatype='string' name='[State Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;OH&quot;'>
              <calculation class='tableau' formula='&quot;OH&quot;' />
            </column>
            <column caption='P-Year' datatype='string' datatype-customized='true' name='[Year Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;2015&quot;'>
              <calculation class='tableau' formula='&quot;2015&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.098mdgi0cpuoiu17m3k3l0c7fuad'>
            <column caption='calc_State' datatype='string' name='[Calculation_1014154383129440262]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([State])' />
            </column>
            <column caption='Calc_Year' datatype='string' name='[Calculation_1014154383133872137]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([Year])' />
            </column>
            <column caption='AVG(1)' datatype='real' name='[Calculation_1014154383144271883]' role='measure' type='quantitative' user:unnamed='Sheet 3'>
              <calculation class='tableau' formula='AVG(1)' />
            </column>
            <column caption='AVG(2)' datatype='real' name='[Calculation_1014154383146573836]' role='measure' type='quantitative' user:unnamed='Sheet 3'>
              <calculation class='tableau' formula='AVG(2)' />
            </column>
            <column datatype='integer' name='[Opioid Claim Count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Opioid Prescribing Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Claim Count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Opioid Prescribing Rate]' derivation='Avg' name='[avg:Opioid Prescribing Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1014154383129440262]' derivation='None' name='[none:Calculation_1014154383129440262:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1014154383133872137]' derivation='None' name='[none:Calculation_1014154383133872137:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Opioid Claim Count]' derivation='Sum' name='[sum:Opioid Claim Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Claim Count]' derivation='Sum' name='[sum:Total Claim Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1014154383144271883]' derivation='User' name='[usr:Calculation_1014154383144271883:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1014154383146573836]' derivation='User' name='[usr:Calculation_1014154383146573836:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Opioid Claim Count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Total Claim Count:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:Calculation_1014154383129440262:nk]'>
            <groupfilter expression='[Calculation_1014154383129440262] = [Parameters].[State Parameter]' function='filter' user:ui-marker='filter-by'>
              <groupfilter from='&quot;AK&quot;' function='range' level='[none:Calculation_1014154383129440262:nk]' to='&quot;WY&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:Calculation_1014154383133872137:nk]'>
            <groupfilter expression='[Calculation_1014154383133872137] = [Parameters].[Year Parameter]' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                <groupfilter function='member' level='[none:Calculation_1014154383133872137:nk]' member='&quot;2013&quot;' />
                <groupfilter function='member' level='[none:Calculation_1014154383133872137:nk]' member='&quot;2014&quot;' />
                <groupfilter function='member' level='[none:Calculation_1014154383133872137:nk]' member='&quot;2015&quot;' />
                <groupfilter function='member' level='[none:Calculation_1014154383133872137:nk]' member='&quot;2016&quot;' />
                <groupfilter function='member' level='[none:Calculation_1014154383133872137:nk]' member='&quot;2017&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[:Measure Names]</column>
            <column>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:Calculation_1014154383133872137:nk]</column>
            <column>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:Calculation_1014154383129440262:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[usr:Calculation_1014154383144271883:qk]' field-type='quantitative' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[usr:Calculation_1014154383146573836:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[usr:Calculation_1014154383144271883:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[usr:Calculation_1014154383146573836:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='rows' value='#fcfcfc' />
            <format attr='color' data-class='total' scope='rows' value='#fcfcfc' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.8790607452392578' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[usr:Calculation_1014154383144271883:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[:Measure Names]' />
              <size column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[Multiple Values]' />
              <text column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[Multiple Values]' />
              <text column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Measure Names:&#9;</run>
                <run bold='true'>&lt;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[:Measure Names]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.9944751262664795' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[usr:Calculation_1014154383146573836:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[avg:Opioid Prescribing Rate:qk]' />
              <text column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:State:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Measure Names:&#9;</run>
                <run bold='true'>&lt;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[:Measure Names]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Opioid Prescribing Rate:&#9;</run>
                <run bold='true'>&lt;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[avg:Opioid Prescribing Rate:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#ff003b' fontsize='10'>&lt;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[avg:Opioid Prescribing Rate:qk]&gt;%</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='10'>&lt;[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:State:nk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.4612706899642944' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#fcfcfc' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.098mdgi0cpuoiu17m3k3l0c7fuad].[usr:Calculation_1014154383144271883:qk] + [federated.098mdgi0cpuoiu17m3k3l0c7fuad].[usr:Calculation_1014154383146573836:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{F9B8F894-5E76-4A80-A7CA-2322497AB526}' />
    </worksheet>
    <worksheet name='opr vs deaths map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Opioid Prescribing Rate V/S Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DESKTOP-0DCI330' name='federated.098mdgi0cpuoiu17m3k3l0c7fuad' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.098mdgi0cpuoiu17m3k3l0c7fuad'>
            <column caption='calc_deaths' datatype='real' name='[Calculation_1014154383178223629]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM( { FIXED [State], [Year]: AVG([Deaths]) } )' />
            </column>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Opioid Prescribing Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Opioid Prescribing Rate]' derivation='Avg' name='[avg:Opioid Prescribing Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1014154383178223629]' derivation='User' name='[usr:Calculation_1014154383178223629:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;AK&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;HI&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[Latitude (generated)]' field-type='quantitative' fold='true' projection='EPSG:3857' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[usr:Calculation_1014154383178223629:qk]' num-steps='5' palette='my custom2' type='interpolated' />
            <encoding attr='color' field='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[avg:Opioid Prescribing Rate:qk]' num-steps='19' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#d5d5d5</color>
                <color>#d9d6c4</color>
                <color>#ddd7b3</color>
                <color>#e1d8a0</color>
                <color>#e5d88d</color>
                <color>#ead97a</color>
                <color>#eeda65</color>
                <color>#f2da50</color>
                <color>#f6da39</color>
                <color>#fada22</color>
                <color>#ffdb0b</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[usr:Calculation_1014154383178223629:qk]' />
              <text column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:State:nk]' />
              <lod column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:State:nk]' />
              <geometry column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[avg:Opioid Prescribing Rate:qk]' />
              <size column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[avg:Opioid Prescribing Rate:qk]' />
              <lod column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5932043790817261' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.098mdgi0cpuoiu17m3k3l0c7fuad].[Latitude (generated)] + [federated.098mdgi0cpuoiu17m3k3l0c7fuad].[Latitude (generated)])</rows>
        <cols>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2B623E55-9062-4BFE-BBB6-C367A95E0AF2}' />
    </worksheet>
    <worksheet name='tree map most prescribed drug'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Tree Map for most prescribed opioids</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DESKTOP-0DCI330' name='federated.098mdgi0cpuoiu17m3k3l0c7fuad' />
          </datasources>
          <datasource-dependencies datasource='federated.098mdgi0cpuoiu17m3k3l0c7fuad'>
            <column datatype='integer' name='[Bene Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Drug Name]' role='dimension' type='nominal' />
            <column-instance column='[Drug Name]' derivation='None' name='[none:Drug Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Bene Count]' derivation='Sum' name='[sum:Bene Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:Drug Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ABSTRAL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ACETAMIN-CAFF-DIHYDROCODEINE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ACETAMINOPH-CAFF-DIHYDROCODEIN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ACETAMINOPHEN-CODEINE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ACTIQ&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ARYMO ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ASA-BUTALB-CAFFEINE-CODEINE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ASCOMP WITH CODEINE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ASPIRIN-CAFFEINE-DIHYDROCODEIN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;AVINZA&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;BELBUCA&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;BELLADONNA-OPIUM&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;BUPRENORPHINE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;BUTALB-ACETAMINOPH-CAFF-CODEIN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;BUTALB-CAFF-ACETAMINOPH-CODEIN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;BUTALBITAL COMPOUND-CODEINE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;BUTORPHANOL TARTRATE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;BUTRANS&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;CAPITAL W-CODEINE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;CARISOPRODOL COMPOUND-CODEINE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;CARISOPRODOL-ASPIRIN-CODEINE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;CO-GESIC&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;CODEINE SULFATE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;CONZIP&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;DEMEROL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;DIHYDROCODEIN-ACETAMINOPH-CAFF&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;DILAUDID&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;DISKETS&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;DOLOPHINE HCL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;DURAGESIC&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;EMBEDA&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ENDOCET&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ENDODAN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;EXALGO&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;FENTANYL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;FENTANYL CITRATE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;FENTORA&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;FIORICET WITH CODEINE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;FIORINAL WITH CODEINE \#3&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;HYCET&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;HYDROCODONE BIT-IBUPROFEN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;HYDROCODONE-ACETAMINOPHEN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;HYDROCODONE-IBUPROFEN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;HYDROMORPHONE ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;HYDROMORPHONE HCL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;HYSINGLA ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;IBUDONE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;KADIAN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;LAZANDA&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;LEVORPHANOL TARTRATE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;LORCET&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;LORCET 10-650&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;LORCET HD&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;LORCET PLUS&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;LORTAB&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;MAGNACET&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;MAXIDONE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;MEPERIDINE HCL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;MEPERITAB&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;METHADONE HCL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;METHADONE INTENSOL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;METHADOSE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;MORPHABOND ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;MORPHINE SULFATE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;MORPHINE SULFATE ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;MS CONTIN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;NORCO&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;NUCYNTA&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;NUCYNTA ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OPANA&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OPANA ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXAYDO&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXECTA&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYCODONE CONCENTRATE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYCODONE HCL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYCODONE HCL ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYCODONE HCL-ACETAMINOPHEN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYCODONE HCL-ASPIRIN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYCODONE HCL-IBUPROFEN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYCODONE-ACETAMINOPHEN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYCODONE-ASPIRIN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYCONTIN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYMORPHONE HCL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;OXYMORPHONE HCL ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;PENTAZOCINE-ACETAMINOPHEN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;PENTAZOCINE-NALOXONE HCL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;PERCOCET&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;PERCODAN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;PRIMLEV&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;REPREXAIN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ROXICET&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ROXICODONE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;RYBIX ODT&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;RYZOLT&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;STAGESIC&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;SUBSYS&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;SYNALGOS-DC&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;THERATRAMADOL-60&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;TOPIRAMATE&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;TRAMADOL HCL&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;TRAMADOL HCL ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;TRAMADOL HCL-ACETAMINOPHEN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;TREZIX&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;TYLENOL-CODEINE NO.3&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;TYLENOL-CODEINE NO.4&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;TYLOX&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ULTRACET&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ULTRAM&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ULTRAM ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;VICODIN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;VICODIN ES&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;VICODIN HP&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;VICOPROFEN&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;XARTEMIS XR&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;XODOL 10-300&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;XODOL 5-300&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;XODOL 7.5-300&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;XTAMPZA ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;XYLON 10&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ZAMICET&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ZOHYDRO ER&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ZOLVIT&quot;' />
              <groupfilter function='member' level='[none:Drug Name:nk]' member='&quot;ZYDONE&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:Drug Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Bene Count:qk]' palette='gray_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Bene Count:qk]' />
              <size column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Bene Count:qk]' />
              <text column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:Drug Name:nk]' />
              <text column='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Bene Count:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{36F41F0A-058E-4C44-A1BF-D13931D99536}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='98307' id='13' name='opr vs deaths map' w='59517' x='146' y='911' />
        <zone h='11458' id='18' name='opr vs deaths map' pane-specification-id='2' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[usr:Calculation_1014154383178223629:qk]' type='color' w='10249' x='586' y='78906' />
        <zone h='10807' id='20' name='opr vs deaths map' pane-specification-id='3' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[avg:Opioid Prescribing Rate:qk]' type='color' w='10249' x='512' y='69401' />
        <zone h='16536' id='19' name='opr vs deaths map' pane-specification-id='3' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[avg:Opioid Prescribing Rate:qk]' type='size' w='10249' x='46340' y='72135' />
        <zone h='93359' id='30' name='Deaths by year and state' w='41288' x='59297' y='1302'>
          <layout-cache type-h='fixed' type-w='fixed' />
        </zone>
        <zone h='11068' id='31' name='Deaths by year and state' pane-specification-id='2' param='[federated.0x5eicl13i6ys2169zn7d1b1du8j].[none:Year:ok]' type='color' w='10249' x='88873' y='26953' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='72' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='73' param='vert' type='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='280' h='98307' id='13' is-fixed='true' name='opr vs deaths map' w='59517' x='146' y='911'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11458' id='18' name='opr vs deaths map' pane-specification-id='2' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[usr:Calculation_1014154383178223629:qk]' type='color' w='10249' x='586' y='78906'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10807' id='20' name='opr vs deaths map' pane-specification-id='3' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[avg:Opioid Prescribing Rate:qk]' type='color' w='10249' x='512' y='69401'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16536' id='19' name='opr vs deaths map' pane-specification-id='3' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[avg:Opioid Prescribing Rate:qk]' type='size' w='10249' x='46340' y='72135'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='93359' id='30' is-fixed='true' name='Deaths by year and state' w='41288' x='59297' y='1302'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11068' id='31' name='Deaths by year and state' pane-specification-id='2' param='[federated.0x5eicl13i6ys2169zn7d1b1du8j].[none:Year:ok]' type='color' w='10249' x='88873' y='26953'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C80E2632-B5B6-426D-BD75-75ADFC2F20A2}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='71500' id='3' name='Heat Map' w='99700' x='200' y='875' />
        <zone h='11000' id='8' name='Heat Map' pane-specification-id='0' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Total drug cost:qk]' type='color' w='17000' x='79800' y='2375' />
        <zone h='33250' id='13' name='Providers Total claims per year line graph' w='99900' x='0' y='67500' />
        <zone h='10625' id='18' name='Providers Total claims per year line graph' pane-specification-id='0' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:NPI_id (DIM_Provider):ok]' type='color' w='14000' x='12300' y='74000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='51' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='52' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='71500' id='3' is-fixed='true' name='Heat Map' w='99700' x='200' y='875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11000' id='8' name='Heat Map' pane-specification-id='0' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Total drug cost:qk]' type='color' w='17000' x='79800' y='2375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33250' id='13' is-fixed='true' name='Providers Total claims per year line graph' w='99900' x='0' y='67500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10625' id='18' name='Providers Total claims per year line graph' pane-specification-id='0' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:NPI_id (DIM_Provider):ok]' type='color' w='14000' x='12300' y='74000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9E079167-6EDA-4663-A461-B2B0A6E2FF77}' />
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='P-State' datatype='string' name='[State Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;OH&quot;'>
          <calculation class='tableau' formula='&quot;OH&quot;' />
          <members>
            <member value='&quot;AK&quot;' />
            <member value='&quot;AL&quot;' />
            <member value='&quot;AR&quot;' />
            <member value='&quot;AZ&quot;' />
            <member value='&quot;CA&quot;' />
            <member value='&quot;CO&quot;' />
            <member value='&quot;CT&quot;' />
            <member value='&quot;DC&quot;' />
            <member value='&quot;DE&quot;' />
            <member value='&quot;FL&quot;' />
            <member value='&quot;GA&quot;' />
            <member value='&quot;HI&quot;' />
            <member value='&quot;IA&quot;' />
            <member value='&quot;ID&quot;' />
            <member value='&quot;IL&quot;' />
            <member value='&quot;IN&quot;' />
            <member value='&quot;KS&quot;' />
            <member value='&quot;KY&quot;' />
            <member value='&quot;LA&quot;' />
            <member value='&quot;MA&quot;' />
            <member value='&quot;MD&quot;' />
            <member value='&quot;ME&quot;' />
            <member value='&quot;MI&quot;' />
            <member value='&quot;MN&quot;' />
            <member value='&quot;MO&quot;' />
            <member value='&quot;MS&quot;' />
            <member value='&quot;MT&quot;' />
            <member value='&quot;NC&quot;' />
            <member value='&quot;ND&quot;' />
            <member value='&quot;NE&quot;' />
            <member value='&quot;NH&quot;' />
            <member value='&quot;NJ&quot;' />
            <member value='&quot;NM&quot;' />
            <member value='&quot;NV&quot;' />
            <member value='&quot;NY&quot;' />
            <member value='&quot;OH&quot;' />
            <member value='&quot;OK&quot;' />
            <member value='&quot;OR&quot;' />
            <member value='&quot;PA&quot;' />
            <member value='&quot;RI&quot;' />
            <member value='&quot;SC&quot;' />
            <member value='&quot;SD&quot;' />
            <member value='&quot;TN&quot;' />
            <member value='&quot;TX&quot;' />
            <member value='&quot;UT&quot;' />
            <member value='&quot;VA&quot;' />
            <member value='&quot;VT&quot;' />
            <member value='&quot;WA&quot;' />
            <member value='&quot;WI&quot;' />
            <member value='&quot;WV&quot;' />
            <member value='&quot;WY&quot;' />
          </members>
        </column>
        <column caption='P-Year' datatype='string' datatype-customized='true' name='[Year Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;2015&quot;'>
          <calculation class='tableau' formula='&quot;2015&quot;' />
          <members>
            <member value='&quot;2013&quot;' />
            <member value='&quot;2014&quot;' />
            <member value='&quot;2015&quot;' />
            <member value='&quot;2016&quot;' />
            <member value='&quot;2017&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='37375' id='3' name='donut chart OPR' w='65800' x='0' y='61875' />
        <zone h='5375' id='8' name='donut chart OPR' pane-specification-id='1' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[Multiple Values]' type='size' w='25000' x='58300' y='75375' />
        <zone h='6000' id='10' mode='compact' param='[Parameters].[Year Parameter]' type='paramctrl' w='16000' x='76000' y='90500' />
        <zone h='8000' id='9' name='donut chart OPR' pane-specification-id='1' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[:Measure Names]' type='color' w='16100' x='58700' y='81250' />
        <zone h='6000' id='11' mode='compact' param='[Parameters].[State Parameter]' type='paramctrl' w='16000' x='58900' y='90500' />
        <zone h='62125' id='40' name='tree map most prescribed drug' w='86900' x='-300' y='-125' />
        <zone h='9875' id='45' name='tree map most prescribed drug' pane-specification-id='0' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Bene Count:qk]' type='color' w='11100' x='88400' y='1250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='52' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='53' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='62125' id='40' is-fixed='true' name='tree map most prescribed drug' w='86900' x='-300' y='-125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9875' id='45' name='tree map most prescribed drug' pane-specification-id='0' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Bene Count:qk]' type='color' w='11100' x='88400' y='1250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37375' id='3' is-fixed='true' name='donut chart OPR' w='65800' x='0' y='61875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5375' id='8' name='donut chart OPR' pane-specification-id='1' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[Multiple Values]' type='size' w='25000' x='58300' y='75375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8000' id='9' name='donut chart OPR' pane-specification-id='1' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[:Measure Names]' type='color' w='16100' x='58700' y='81250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6000' id='11' mode='compact' param='[Parameters].[State Parameter]' type='paramctrl' w='16000' x='58900' y='90500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6000' id='10' mode='compact' param='[Parameters].[Year Parameter]' type='paramctrl' w='16000' x='76000' y='90500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{471E9B77-A974-46B2-AEDB-483E22378829}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='58'>
    <window class='worksheet' name='Deaths by year and state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0x5eicl13i6ys2169zn7d1b1du8j].[none:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EB5F73A3-B714-4CC5-9A87-1C1429A58502}' />
    </window>
    <window class='worksheet' name='Map based deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x5eicl13i6ys2169zn7d1b1du8j].[sum:Deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{C08E1E3B-B344-4690-A073-CB48C335D247}' />
    </window>
    <window class='worksheet' name='donut chart OPR'>
      <cards>
        <edge name='left'>
          <strip size='152'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[Multiple Values]' type='size' />
            <card pane-specification-id='1' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[:Measure Names]' type='color' />
            <card mode='compact' param='[Parameters].[Year Parameter]' type='parameter' />
            <card mode='compact' param='[Parameters].[State Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{87FE09F6-5BC3-4435-974F-A0B4D08704E4}' />
    </window>
    <window class='worksheet' name='opr vs deaths map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[usr:Calculation_1014154383178223629:qk]' type='color' />
            <card pane-specification-id='3' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[avg:Opioid Prescribing Rate:qk]' type='size' />
            <card pane-specification-id='3' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[avg:Opioid Prescribing Rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[avg:Opioid Prescribing Rate:qk]</field>
            <field>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[usr:Calculation_1014154383178223629:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{122B50B8-F750-4F80-9FBF-132426530EB6}' />
    </window>
    <window class='worksheet' name='Heat Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Total drug cost:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2B6A1E84-BD92-414C-8453-DA271929D938}' />
    </window>
    <window class='worksheet' name='tree map most prescribed drug'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Bene Count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:State:nk]</field>
            <field>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[sum:Total drug cost:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{20D4B4E8-77ED-4271-96D5-5F745380748C}' />
    </window>
    <window class='worksheet' name='Providers Total claims per year line graph'>
      <cards>
        <edge name='left'>
          <strip size='144'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='148'>
            <card pane-specification-id='0' param='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:NPI_id (DIM_Provider):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:Year:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:First Name:nk]</field>
            <field>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:NPI_id (DIM_Provider):ok]</field>
            <field>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9A1BE949-9084-4A88-A699-53F40FF45BDB}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Deaths by year and state' />
        <viewpoint name='opr vs deaths map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{068D5932-B167-4ECB-8CA0-6BEE4548DB3F}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Heat Map' />
        <viewpoint name='Providers Total claims per year line graph'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[none:NPI_id (DIM_Provider):ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{22F9D2E4-954C-4D35-9C1D-A1D2F4F84699}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='donut chart OPR'>
          <zoom type='entire-view' />
          <highlight field='[federated.098mdgi0cpuoiu17m3k3l0c7fuad].[Multiple Values]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='tree map most prescribed drug'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{041EC0A9-6450-4CD0-B8A8-405151297B72}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9d5wdV3nw/51ye9nem1ZdVrVkyRXcYxtsim0cEmxICCSEAD8nLySEhJIQ
      8iNAeEkhgYQSmgOhGDAGY+Nu2eq9l11t73dv7zPz/nE1s3Pnzi0ryYEQP5+PtLszpzznnKef
      55wRNE3TeAVegf+lIP6yEXgFXoFfJrzCAK/A/2p4hQFegf/V8AoDvAL/q+HXigHmp0fZuXMX
      B46cwM6z37tvX8mz6PQQp0dnjb8Hju9nKpIBYGroFM+/tJOXXtpBJJG5KNxOHDtEPJ1nx44d
      Cw9zSfYePl5T/cGTR9ixczc7duwilVVK3s/NzZWte/rkcbJKYUbOnDpBTtXQcgl+8cxLDJ46
      xu7duzl2+pxR/qUXnmbP+WfVIiSx+RBZVQUoHtv/EPi1YQA1n+bZnYfYduU2Wlwp9hw9R3hu
      jpGhswyPTwOwpK8PgERkjkNHjpNXNbx1zbTW+9E0jYFTxzl2/CTpXIHApkaHaOtfw5VXbODZ
      Z55jbm6OZDTE1GyEZGyew0dPkFc1lGyaQwcOMBuOAzAxPMDpwVFSsQiJVIpzwyN0dnbjckjM
      zs5w4uhhwvEUOFws6Wwnm4wyOzvHocNHySkqmqZy5sRRzpwbJp8vENe5wUGWX7aRLRv6efrZ
      nahKjuNHDjI8Pk0mEeHb3/42e/ceIJ1TmJ0c5dTAMHp8T0jMcnx4FtA4euwksihw5ughVqzo
      4tDAHFu3bmVZb6cxl2PTc1yxdStC+BxHBqbQNIUTRw8RiiYBjdFzZzhy4gyqpvKLH36fZ3fu
      ZmouwtzcHGdOHGU6FAU0Bk8f5+zQGL/KgcZfGwZIhcfw1XcjAJ19K5geO8feF55F8TcRGjjI
      qbF5du7YQS4V5skX9rNiSTuPP/EM8ZlBjp6ZZOezTyAG2+hoqS9pOxKaweMP8uyTP+PRnz9F
      PhPnqRf2sLS7iSeeeoGnn3icvtWXQT7DwNFdjCckWuu8jJw8zFcf+g6heIbjB3YTSSnEoxF6
      lq7guSceI6Nk2bljP6Gxk2w/MMCSVg/P7jzKC0/+HE9TN2OnDxFO5YpwmR6fINjQQCqZoHvZ
      akaP7iWsulnSv4QtWzaRmh7g6HAEvxJi55EBAJauv5xzxw6SmBnE37YMARiejdPT2Yk7H+LF
      XfsRZblk3Gu2XM7Zw8d4/sknaO1dzkvPPEEml8Xpa6KnTuHpnSfo7V3C+ss309ZUR2hmitae
      Zex44RmmTu9hLO2jzueqqkV+mfBrwwCyO4CSTQKQy6aQZBeS7KalqZ6lK/qYHC+YOanwJI3t
      /Xj8DZBPGvVDiRxL2htxOl0LjWoKxw8fYCqmccurr0R2+XjjPfdQ71aYmZ3nxJlh6uv8bNq8
      kUN7djMwMsHo2CwrlvdS19iILMKrbrmTzZctN5oM1DXi87hprnOTzCyYMj29fXg8HlQlRyyj
      0tVSh9ttwkXJsXv7L3jk+RNcs2UNQ2dOcGD/fibGp0nm8kaxiaFhool5JiIZvOdpWnT4cWhJ
      9h06zcYNq8jGp5H9bYiCzG13vp7L1yzhBz/4EaqFUjOxKJ76esYnJhk4dRyvN0h4bpyde/Zx
      ZmiMRDRaVL6xpZ2gz40sSzT3rYXwOY4cWTC/fhXh14YBXL4W/GKMHTt38fTzu9m6bTNKPs3B
      fXvZvucU69cuAcDfsoTY5HF27XyRYEuXUb+7JcgzL7zE6cGRhUYFiTXrN7F6+RIEASSHE1kU
      8Na30xxwoKoaDQ2NxONJ3C4X09NTrF27ipeee5a9+w+TV0WczmLJmk1F2bN7FzHNR51Xsh1L
      e6OP517cycDQ+MJDycHWa2/hddev44ePPkkymQRBhPPytdnvYseeA3StWkM+GkFDpLGhzqi+
      vKOBfYMhmnwOjhw6zrr1a1DScV7Yvp2jJ89Q39iEIBTKRuem2bNnD8+8dJzrrt7AquX9JNNZ
      fHX1SPksufMErQFdS9rZt32HYf7pEI9Fcbg8pKKzJLK/ugwg/DrvBD/z6E/Z+trX4PtlI7JI
      mJmepL6xmWefeIyrbr4Dv9OeUS4MNJ588iluuvlmhEvY6v9U+LVmgPDcHIGmJi4l+fx3QDoR
      5cSps3T3r6C53n9J21ZzCYYm4vT3tl3Sdv+nwq81A7wCr0A1+LXxAV6BV+BCQE4mk6RSqaKH
      oiiiaZrxD0CWZRSleAPGqjyE816U/hMgn88j24TY9Lp6WXNflUAQhJrjyoIgoKoqkiSV7dOK
      k96+eQzl2jbX0cdp7uNilasgCDgcDnK53AW3paoqgiCUjEcQBLxeb9VxXiyoqoqiKCiKgiiK
      SJJkrIcVFEUhm82int9Y00GnvXLrpf9eC1jXRVYUhVxuIdasNyoIQhHB5/N53G436XTaGJi5
      UWsn+r90Ol0I76lqCWGZf1dVtWTgdohbf1aDfD6Pw+Gwxc9a365/UayuJPVxulyuomcXwwD6
      GLPZbNVyen9273K5HE6ns+i5zhROpxOfz/eyMYGmaaTTaURRJJfLGfNjnidrWZfLRSQSAQpj
      kmUZj8dDJpMhmUwauOvj1oW13sZiQBAERL0TvVHzPyuBappmTKYoisY/qxTXy5Z0dr6s/rv1
      vfVvs+Qy41NOopVbSB0vr9dLIBDA5XLh81WPDVUjjEpaq9Ji6HNUjeGr9a2XK0f8mUymhPgB
      Yx0SiQTZbPZl26nV11lRFNxuN06n05b4ATKZDNFolHg8XrTm+XyeeDyOLMtFdXXa0/u5ECbW
      NA1Z/8W8mOUWNpVK4ff7jUkrN3F2CFlVsbmuPknWNnSNYy5rZlTrYMwgimIJgSWTSZxOJ06n
      09Bk1rb1Z4ud1ErEbAcXI3XN4y/XTjabxeVyGfNuV1bTNObn55FlGbfbjdfrrUnjLQYEQcDl
      cuFwOMriqqoq8XjcEAxWOslkMuRyOWOOyzH8BeEXjUa1RCJRNFGVGtORK7fgVsmtSyGdqMwT
      bFVjiqJUbPtCIJfLFZlAgiAgSZLRh5mYLmbxy/k6vwxIp9NFkt9sNlZiPFEU8Xq9uN1uJEl6
      2f0DHaLRaGFjj2L/04qbmUahVAteCN0YGkD/mU6nyeVyRZJeX9hsNovb7a5KKFZzSn8GC5LS
      artpmma063K5jAXQVfViHeRKzqzOaOaxXyzUMvl22uZSQzabtTV7atFouiROJBIEg0HcbvfL
      zgSpVMogfh2HchK+HHNcDBgMoBNMJpMhn88TDodxOBzoTrIuVRRFIRAI2BKb3pbZnNERt1O/
      1gHrz/L5vMHRsizjdDrJZKqnI1vxMP+09ltNjervJUkynLhKUAsD6MwsimIRcenzJUlSkdNa
      60Lrc6goim2ExRo0qMW/iEQi5HK5okiReS0vBWOk02nD4bX2X24MleBChJoMC9JYEAT8fj+5
      XA63221EEWRZLnFCrOqnWkjK/N5sy9mpND10BhhRELty+nNzvVrArKFEUUSWZVtnUJIk6uvr
      URSFeDxOPp8v0yK2wsDuXSQSQZIkMpkMmUwGURRxuVxks1kEQSCTyeD1etE0jfr6+pqdYT1M
      WE472wUl7ObEDMlkkmQyWSR59VCmjrfT6Vy0uaRpGolEgkQiUfKuUvTMTDd6v7rVUm6c1aDI
      BEokEoYzlE6nDVtQVVXD6y7nNJo9cmsUyGrqWEOoVnPJDsxSzDrZlVSjKIr4/X5SqZTBVFZm
      NWssKz75fJ5EIkE+n69owuhmYqWokCAINDY2Gv05HA7DOdS1ra4Zal1IM77l4ut2uFjHUIno
      rMJLX79MJoMsyzQ1NdXcbzabJZlMVow+2QUwzCDLMg6Hg3w+b1gGdutfi0aQzQXz+TzJZNLY
      kEilUoZUUhTFsM3D4TBLliwxOtXrmx0Vc6d2YVHzpFRD0gpmKWcepF0/ullnlh66revz+XC5
      XLhcLkKhkOGs646zHne2mhBmjan/tNtvsBur2+0uea4zgPWZeSx6hMbOH9J9M3M/1eazVnOo
      Fr/BvNlYrkwmkzH8S7v2rXRgnlvrWBRFIZlMloxTL2tmoGpMLptfOhwOwyTQtYDP5yMQCKCq
      qhHpMEt7MxJm4l+MFLMOolyo02wy6WUqhfmgIC3M0lvHTVVVIpHCKSbzxlA6ncbhcBiaLxKJ
      oGmaYSZ5vV5SqRSiKNLW1mb0q8+LnXYrR0TVTEbruO2kZiaTsWUqu74uxHksh7tZGFRjknQ6
      TTxenC5tHXs5RrAzLXWLxFzHjIN599xMG3YCsogBPB5P0UuXy2VU8Hg8hq0VDAZLBmlG4GIi
      LHZ1dALQGc9qRtkRi1mr2S2QbsPqbbndbjKZDC6XyyBofQKz2ayxWahrQl1i6wtj3ceww8sM
      kiTZ1ikHdvZyuY0uM15mXC5VFMXcRqX4vg7WFBE7HPW5roVRzWV8Ph8Oh8PY1IPCvJTzL80w
      OztbYAA7e8sqhc2Ohp16sQtfmSMGi5l0K+FYd5ytkSOzNDLX051pq5QSBIFgMFhUVxAEw/nU
      mUPPkdKfAyWxfn3hzNJfJ0qdwM2+h/5ej2zpjrV1jqzEYQVFUQymtIJVS9pJU/PcXcz+Ry0O
      sG6z646+2XQuxxB2DGz3ey6XMwSTFcy0Z0fjfr+/kAphnjDr3+aUB937tytrRQyKGWCxoPdt
      N8FmjWBNydDL6lERO+1gxdf8XB+fOQenEvPq9rs+0Xqyl06gbrfb0BZmFZ5KpYqiSna+S7n+
      qtnd5ebcahJczNrokEqlqgo3URSpr683hIR13vV/Ho+nZK7s+jbnL2UyGeLxeAmBW5nfjoZS
      qRSyeVKs0qASEuVsW7N01hdKJ9Za1a91kXRcrLiay9j5C9aBmwnQPA7ze6tzWwu++XzeCMnp
      Tre5bz2+bza7nE6n4WRXAl3K686j7ouVM33M49SFhzXZ0U76Lhb0uvoekdV8titv3oHXx6Lj
      oe83ZLNZJEkycrVSqRSyLBsBGVEUcTgcOJ3Osik51Uwf/bnT6US2SvxyHGPHTZUa18s5nU4i
      kYixeVYNMR0fcwTK4/EY2kCXzPpmkp3taPe3Xb922q/c+O3GaGYSK8PovyuKYpiPsiwbsX19
      g7HaBp/uw+jt6Tk+OlQKAghCIZ/KHLqs5JTXMlZrXxfjUwiCQF1dnSE8dJPT4XCgaZoxdnO6
      vqIoRmCiUrtWYWlnWvl8PmyTVyrZZ9aGytmgVvvSrFmsi2HHWLpqVRTFiOLk83nq6uqMSejp
      6SnB0Q4XfYJ188GOUPVyZrz0360TZx6DeSzmug6HA4/HU2RKmUOdkiTh9/tr2uE2x93LpRLb
      zYGeSWmdjwuBcvXMWZmLBU3TipISzT6UnVljrmfFybpOdrRpN4aifQA7R8PsYJabaCtYmcfr
      9RKPx/H7/SXlyjk35kiT2dF0OBxF0Y9qeJjBagOXMwWsZcz9m5nIGvLUHW79b93k0XPiPR5P
      UV+6j2AOMFhB71/P8bEycjkiuJRQTeNX0i56yBIKhG3dB9DHbq4Xi8Vs+8pkMiQSCRoaGgAM
      7erxeErMd7PW1H+3Y6iy6YuVnDIrI1TzFXRpF4/HyeVyRbuhdn0BRZrD6njrce/FqF7zBJTT
      XnbayMz4lUw4MzHKsoyqqobdbz4QZCZc3fatxABgn+CmayzzSanF2PVmoi53aswKdpJVEAoh
      Yz1VRBRFfD6foU2tJmY1fOzoSXeeU6kUTqeTcDgMFBjF7/cTjUZRVRWv10tDQ4PRVrkNWPPY
      ZbuH5QZvRtDKcday5kXWbVCfz4eiKITDYSMMaY0M2LVldUytOFcC82RYn9sRsR2xWwm/HPFn
      MhkcDoeRQmKOKOnOotfrLYpi6FrFbvy65Nd9HTM4nc6iXepq5qrOQGaTzIyDFcqFta3jN8+v
      vvmkaRrBYLAEr0q7xZWEqN53XV0doVDIcJj1HDXdlHQ4HFV3pa39GSZQOQeyElKVGrfa1vpi
      6RJRj5yY39upKF1C1Wpr2vkp5exDq1lXbWzmuuaoj9Us0neKdRPI5XIZxKHvtuugO/d2iXb5
      fN6w+a14mQ+IWHGzM+GsRyvNJq51jsrRgJ0/pO+WNzY2EggEjCQ/O3C5XLZpCnpbVo1m7ktf
      L3PekdkfMvtXVt/SCubnovWBuWPzZFqdvHISUkdUL2udYB1Zsy2o1ylH4FZcKoFduXKLa9VU
      leqbtZR1XNZF0807/SSTWSJFo1HDqdcFgtfrrTqucmM1/yynTczzX86UtZa3tm9nLuqQy+UM
      Z9vtdttmCuh19AiPHePpuWbWgIl5/stZKuXWvBos2n3XJ9huQ8PcuXnC7fJjACPxTn9uxwDW
      XeDF4Kn/s/oRdnhWa8uKg66xiqSJJUdK/90sfVVVJRaLkc/njXmpJZ2gEpilsZVJreUqjdlK
      XOa/KwlJoCgVoZywEgTBiO9b21RVlWQyacyLXX0r3dnhbi5brq657yKK01W7dTPMqpLMUtTM
      mWYbUX9Xjkj0o3fWWLgdE9TKzWZ8q03WhTKVmSHNu+N6Wzox6yaNPkYz6JmR+nxZ53wx+JjH
      rP9u/lmNiKu1W6mM9Z/1/LYd2FkQ5nfWctXAvNZ2z6w0aP0pQqnDU25BrFykT4T5XTkkrXFz
      wLjyIp/PGwRjTX+w9leuXR1qNZWsZRdLIPoc6fja4az/bueU6UwQCoWMCEatUGlOdNDXzy5v
      yzrmcv5AraDPYyqVYn5+vuTshB4E0LSFza5a1qkSHna41mLelTj2dpxhlui1SGTr5C5mcPri
      p1IpQyqaJXSldiqp2sX4DeV8lWq4m3HU/5lNG1jYybUezM/n88axw2w2W5RPVG3hzThb58Hq
      f+nvzX3btVepL7vn5d5ls1nC4XDRHDidThwOB+l0umLIVxcs5QSwVWtX8nXM9FupnliJgPRO
      rWre2qm1XjmiK6fidCYwpzqUG6QdrubBW0ODi5Hq1XC34l/OxDIvnp7L4nK5qK+vt82Z0f2C
      Wg7UVMJfj7BY8apkw1+M6VVu/PrBKrOQ01NbKkElQVTL2tj5p+b6Og3rIWFVVYs1gLmQpmkl
      Eq6SRqjFnLCz1cygH14xI2wuV6nNchKvFliMtrDWs4J5A0ifr2w2SyKRKIkI6aAzib5TXA4P
      q7axk25WyVcJZ33uFjtuu3m22t3pdNpY6/n5eSKRSMkVnHZjNTOwHa5639aNNvPYq43HnNJu
      zJDVebQiatYCulawm5hazAirk2X+W5blou3xagOye2eNUF0qqKTtzD+tklW37/XNGvPcCUIh
      hUKfc+t2vh1UY5JKf1sdQuv7dDpNOBw2TNJwOGwwrx7pMQsps9lmnp98Pk8oFCKRSBhBDuv+
      QDli18HOxBEEgUAgUHQ9T7n5MKdo6HWt6fWiNeaqHyKxG5SZ+K3aohbiN6tO8zOrySWKorHd
      XW4yqoGdZrArsxgTqdYJN7edz+eJnv+UUD6fJxaLlYxfkiQcDodxrLKSxqs2VnO7lXA114WF
      wIe+9mYJHo1GjfXQb4qo5q9oWuFsdSQSMRjcbBJZ16aWsZpv6TCfCbZqH3Nb1tCnqqrG6TpB
      EJD1wwr6Vr319JJ119I68HLSXC9vjvMLgn0Sl7Ud/Uyyfs+N3ZUfdotdbhIr2Y6XUkPYhY+t
      pqW+G6rfxqfjrF/zYR1HNT+mWsak3ob+zKq1rATo8/mM9HMoHIUNBoMl5pTVx6gE5Xwyq/as
      tB66oLD6F9Yylcxwq7knCAJiPp83bFBrtqZeyfx7OQelnG9gxzTWMnYD0E2hcs5TJcYrB+Wk
      5IVCOc1n1pRWcyebzeLxeIx8FnM9/Wpws9lXibjMhFVtLFZz0i6PyE7oVVrbxWjQcvibJbf5
      mV1ZSZKK0rvL0Y7d33Z1VFUt5ALp9p4ZrA5IuUbs6tQiHczcbp14szTS1bF+kqqS5lgsXAgD
      lNN8Ov661jITmpmAdG2mXzKgL3y5u/ErgX7YfDF1yo3pUmpCHew0jPm5+b35WTlczBtt5Zz5
      chqgHJ0U3QphBl16m5O+agErguaBmcuYB2/dQbaWMzOGmaAqMWm1gVcCc8JWJbBbLOvGl3VD
      CjA2hcybVOYLihfjl9iFjiuBx+NBURQymYytJocLEya1QCVtXW7cdht55rk004Yd/lamsPYj
      6vZ2OYT19F0rgVrtqXKmkZXDrZOht1XNmapEGHbcbmci1Zr+UCkebydlzH1Ucw4FQTAuoDWH
      MS/EpMjn88ZNC7WAvtbBYLDoQNHLIf2BknkxQ7nNKSuN6fWt78z1Kkn+cnRhmNp6nrUgCEXO
      hb4ouVyOYDBo7FhaIx1WCW83kHJgV8cOzBJVb9fO3rPTHnYTYe7bDmo5pmjXrp1qt5Yx41/J
      Rl0MUVabZ11Y6fHvapm3tbRprWNX3szYdgRq9S+sdGDneFvp0ypI9Xfl5q+kD72Cz+czDmqY
      /6XTaeMgtv6+mo1vZ6eXc2zMg7DjXp0Jzc5hJelqZ3daQ2GVJMpiwTpfFypNyxGeIBROwJX7
      sspiwJyPZfVN9L4raWMznvrv5r2hSmC3ttZkNavZXAmPcgKt2nqUaCL9F1mWjbsyrZVjsRii
      KOJ0Oqmrq8Pj8dR0useKlB0S5dSa+bl+4qeS5Cw3SGsdfXLtUmMXC9Z5EkWx4g3SlZjETnql
      0hnGZ0LGDRIXwlzmsekX0+ppx9VAJ+xy4edyc2cVRLX4Ndb3duZqJa2paVrZ6JnuK1nNH7Ck
      Q+vmkN/vL2pAURTm5+eJx+NIkkQwGCQYDJYkLVkRtHJ1tYFA+VCr7uyZpbtdqmslP6ESnnab
      KGZ8agFBWNjnqHX/xK4NHUbmU7z2CT/haPyCzwxYfZ9UKkUikSi72WkHlQIC5rkzP6tmJZRr
      q5r5Uml9y+VBWfGTZZnm5mba2tqKD8XrnKKbOnqYTpcW+kZZXV0dQ0NDZHI5njg6SqG/coMU
      jP8tcr6ohNvlI+MIgAZuJU5a8purA+evA5TkkueVwO6jEcL5yloZnAWEkncCAi41SUb0mh+W
      QNEnmTSbcuZmzz93KimyoqcEp8lohnnHCgZnB2ioC1yScKcuKe0+v1rN9Klketbi79XqE1rx
      qeSXWN9ZNb0ulPQbOzweD36/36AJ21shBKFwW4HH4yGRSBgfMBMEwcgJcbvdaMCPDgzxXMQP
      F2j7AgiaSl9HA6NNmwBYEjnAubpNF9zeywXdsaOMBtZe8nZ7YkcYCayzfynB0ek0qzuSxnFC
      /YyxLtmqmQZmk0QUC+eU9eQ7/d4lwDC1oNiMqaZ5ytnjehasbkLr0tgOyo3BTODmcLn+Tjdt
      rMdS7TS+7ufq7aTT6fLXouiVdG7RE6KgIOUGR8d5ft9R3rmxgZ3Pp8mUb+oVqAKKICOqeVTR
      fg4/NLiGzw/MsDUwxTtXZnhq0sFA0sW9fRm2LWst267VzNP9OP0+IvNHPXRJOTs7a3xDbTE2
      vLlPvV/zrXZ6+9Yy5bJRdZzMjGNlRk0rpM0EAgHi8XjR3ob1p9PpNDId9PtEc7lcdaoVBIGJ
      ySn2Hz/NplVLqaurw+l00tnazBtvuoavPfwzBK25ZpPEtg/T/7/a8PLhqAnloyhZycMgvQym
      evne/gVGefrgNB9PjtARkNm8rN02RKgTjcPhoK6ujlwuZ3znweqfSZKEy+UqCYebf0J1m95M
      fHr2aKU0equ0Nv80j8GOIfUMBnPOmRVHQSjcBq6qhXPH5o+M1CS2R+Yi/PbPprnrSIj1jSK9
      9R562proam3CQ5ZlzgRHc/UAiILKuzbs4m2X7afNF+fIbBuf3PVqXhhfUrGPi7CgfmVBRKPN
      lSSUc5NRK0TNEAGVWu4oMGuJaamVj5zMExN8/M7gaf7kVa0Mzcb56ekkb77MjaootLW2IAqF
      QyDT09OcOH2G9tYW3C4XnZ2dJV+C9Hq9JclmVru6Etg5+eUkvN0zs6lj7q+Sr1LulJmuQfR7
      aUOhUOkXatLptFYtxnxm8BzrPvMcGUF37goI9Igx3rVKYu9Uhh/MNwIa/3TjT/j9DXuK6ucU
      kTf95Lf42bmVtu2Lmkpf5wpGGrcB0Bc9xFBwQ0WcfhnQFTvGWOCymspurZvm02teotuTIJaX
      +fTZTTw0vgI7LVKfnkAVZKKulgtHTtPoSJ9j3tlKRnQjq1k0BH7DcYwH1+VoDHj54e5BNizv
      5vWv2oQgCIyPj6MoCt3d3UUpBeYbHvQgSLWDM2Zfw2rnmz8fZWYQq5S3glWaW30Ac7lyjOl2
      u43b43SnP5/PG2ZeTRpg2ZI+/vzadj724pzeIwCSpnBkeI4hsR2A9c1TXOXYTmxW5FQEXKpK
      d1Dg8JTGp1/9GI+dW4FW1oxYeD7pW0578iyT3mW1oFcWfFKS17Rsp8s1w6lEL4/PXUVee/l9
      Fb+U5Z75z1Of7+D0YILBgXHe0DnCkcDbOBRrLikfdnfQHTt6cQwgCEx4+o0/27QQb+iIcv+G
      Zjav6GE2HON3Gpvo7eowCKurq4tsNsu5c+cIBoM0NTUZARA9WzUWixlS0y5MaWYMOxPF7sSa
      GWoNXVcCO22l/+7xeIx9D7Mm04V+TdQgCAJ3re/mr16cNQhY0hSCYoZzeS+9wiR76efazmFm
      hrOMhCRkIBFXGRYglNO4at083f4oI/G6qv1lJC/OfOkngRYD6/xn+M6mP6fbPWM8OxBdwX0H
      PslUtravGl4orPaHUc8MsHd/nKQioghewkMDrOubsGUAKGjBSwKaylubzvL3t7dRX9dlPG5p
      CEJD4cIqRVGYC4VwOl3U1wXp7+8nHA4zODhIR0eHcfeqnWStJWxqJ6Er7XtUsvfN5Sr1ae1f
      FAt3lJrPD+jZs2ZGrflE9LK+bnpdC1mHdaRpVmP0iHFO5AtEncrLbFrjYN/pPFIqj69OZmQi
      R2wix3AU0kqFOxstE5SU62hJnqsVvSJwClm+tPavSYwPoakqx84kOHo0SvTEHv5m6Wcov2dx
      aSCUc+FraiM+M4V6vqtkViGilP+IRHnNuAjQNN7XcYYv3tNPfZ397WyxeJy3PK6/zmYAACAA
      SURBVHSG3/3OAGdGp4ECITQ0NNDf38/c3Byjo6MGkQQCgZKLecv5B+UcWjvzqdIm3GIYyK6u
      rsX0b4flFYXf+dEsA8OjjE9N8+NDU+Ry+cUxQDAQ4JrOhQUM4cUjqcz4ujmeL1xX/cTQctzt
      ft5yk4eNGzxctdHJ3a8L8ntvqePwZA8zqdIDN+Vg1ttHWg7QlBqpuY4OG4OnWekY4D++N8no
      eIovPTxLf7eT+Qzc2bGPVuf8ottcDAwkg0x13cr1N1/D1k3L6agXaNhyC8+E+srWUYTavvFb
      DgRN5XebTvPJO/uNw0Q5S7rD0OQcv/GfcwymPHzzgcu4Yu3y4jYEge7ublpbWzl37hxzc3Nl
      +7Pa8pUks/lkoLWNWnbHa9mtNoPT6cTlchGJRFBVlS/tmecZNvDO3S3c+lwvfzyylbc/qZLO
      1hAGNcPdq+rYPTLEmXxBujyqrIQ5wTDfxxMB/vjZ1/IvNz+CLJ5X6R4Yiwf48K7XlW23XBg0
      5myiOZXAk4uQclQ3nXRokAtncC9b5uaxFxOs6FlIb3aKObxSqlzVKlCrlBb41OStnGI5W+pm
      GKq/jocGlpNQyqdZ5yU3DiVFTirWEk4hz30dh7iifpTZrI+HxjcxkCw24RxKio8tG+LBW5Zx
      8NQQzw+l2OAJcf2rriWfzzM2PsljZ5N8+pifIbGPDwee5KvPN3Ld8ia2ruopITyXy0V/fz/z
      8/MMDQ3R1NRU8olWc6jVHK83v9NBkqSSz7mWi/DY1bcrYy5r/l0QClmv0WgURVE4Nhbms6NL
      QRY4SS+cX4IX0t2MTx2qnQEEQWDFsqV4nhuHPGXilgJfO3Y5B2Y6uH/NAVq9CY7OtvLlI1cw
      l65285k9cc26u+mPHkQDhgPry24WmeFofBlZ0cW2LQ3MzefwOAUcLplVvTCZaWIicxHOZo2Q
      10S+N7GM703U5shLarZkL8Ah5PnKhu9yfdOg8ez+zn08cPDN7I70FMooKW5U9gJN3PqVQXbm
      l3K3+iyvfe1yxian+evtSf5ruo201AWiAJrK5+Y2EYs1UXdunqedk6xf2lHAOZ/nucODjEbz
      pBWBJ4Y13to1xavO37lvZ/+Xi8pYy+hfdi+XRFkuClSJOXTGM/cJGCk8mqbx53vcZGR7y0PV
      anSCDSSzabxqCqj0QTSBgzMdHJzpWEzT5YWrIDJYdzld8RMINdruY5kWvjj+Jh5c8m1YsoDr
      yl4H7zn2djJq+Q/M/bIg5mwmkJ1j3t1pPPsN316O/+IHbLmln2/+/AzdPpUt167m+tDX2CP9
      BRoCvlyY56X1PH7uvIYU4YfaNTz9SJimxDlO1l8FsmlyBZGYs6BBIlIDb/vFKLe1naJHmOWp
      aS+PZNehCufJQlPZFIsz+uwRTqd8/NG2ejxuV5FNbjVhzKFQq3TWM1prSa2opAXM/ejlzNfK
      6OVCkRinch2G1C+FGsOgOvgDAXr8Ik5HnEMxmQguLsXuqIqAmolXLCOqORSx8s1pCyDwV2fe
      yUSmmXf2PGyEQf/+3P38aPr6C8bz5XSd484mOuMnMXsnaz1jJMJJ9p8OoagKDp+bE0dGqEv7
      8QazJBR9/6Z4DXKSh1nJQ1Lw0Bs7goZA1NVCxNlaorkPK90cHgdYWdqUIPKxqa2gaTiVJPcn
      R2hqbDCSy+yOcOrEqEtn/TboWCyGy+UqukFaVVXbL99Y/7bL69G/PWy9kNecbvE3u1XSjgA3
      Nx2i3zvDmUQ7z4bWnN94LKznohigv6+X8abrOCAsI5gL0TJ3kDPhaM31XeTpFJPGRpqR+ShA
      ICMzVq6ipuFQaz+lBaAi8YWRe/nCyL2LqlcJBLSF8Kw5NaCYas4/M/0t2JWzlhVwKcWh3/F0
      kKuXNnBsKErQJYAo0+iBp8fcZPwygqZSl51hwmfvHyUd9Qw7Cjv0wcw03fHjSFqemKORkLvL
      1oz15iOImsqbWidxSwLfnW6lW51iIufhb58aJ+vO8M93ddDZ0ljAXdOMK3XMmcM64cbj8SKi
      tn4oMJlMlhz2sW6m6W3pxK+fUTBrFKspJooik2mFn2z9/7mibvA8rvDi/EruP/g+UnkZVdMW
      aQJpGmHNQ1b2Mit5EeszuOa3n98h1hC084spCMiagopAq5zH429CCPaQcDQw4um1bTuQnaUt
      OcCUd2nJOwEN9SKjJJcCRE2lPjtV8lwAE8VX0hOVdYisFh9u/0nqGt593Ule54kstKDBN4Ov
      IT8h0Rs/wqh/TU2aMepqJeoqJM75svOsDO/gTP02VEGiM3maXmcSJZPkm2/qwuNyksn46Ovt
      4bUv7icdD7N57Soa6rdx7MRJvA7JyCnSj486nU4j01JRFOPW6wLOC76A2XRSVdXQCpqmFd38
      YZd7pBO/IFTO/gSYj8R474qfE5jdjxas48SZMI0+CW30Wd7d1cPfD92HKDsXxwCiKNLpUTl1
      Pro27+6kKxBESc4g1vWiBPsQlTQkZ8j7uhBEiTlPL7NS5Y8oQ8EGltQcgewsMWfxZpGAhohG
      X+wwaNovLU1CEWSmbRj0UkB78mxJSnQ47+U397+FP1v2NFfUjTKX9fGlkW08PLUWWUkjaMoi
      zMIFSDgbOO3YRm/sKKP+NXz88hQb2lz4fY3093YD8MgvnicYCPDgwVZS+Vbump/j717fyNYt
      m5mYmCCZTNDd3Y3b7TY+aaoTp37HlH4jnh3oBK7n6Os3g5vfZzIZ44YOp9NpezrNygSappHJ
      5XjweYXPXjHGv3z2OO/5g7V8/qGzvHpLPffduZzu5CE+M/SbfOm4uDgGUFWVuWQOzpttOcnD
      cN8bKEg2kzqtPWJZBP7cPKP+NaX9ChLT3n4yopv2xFlELb/gqP13wsuYsDfn6qQjcZqRwFo0
      k7YbSdfznqNvLCmfl9zkRSeCphSVrxUkLU8gO8t1rnO8fksfoXCE/r4e4/1dt7yKFw6eQs2K
      jLlW8IVQF4//+yDvXZPhgSu7cLtcDA4O0t7eTn19fYkE1ona7qN8drk95g+J6IeK9Ju0M5lM
      2Q+3mLWKKIokkikePTDMi6nNAGxcV8/3Hp1g3So/ajbHC7smaFzVjCaIfDu6cvEMELLdzbx4
      yhA0pWDmlIkQxB2FzbYp31JaUkNMXWSe0MsJDkHh3o5DbKsbIZTz8u3xjZxOVg695iQPCbke
      dz5BymG/i2sFQVPLEL/GA13P8Y6eJ2lzRjgQXcInzt7N4djCRlxedJF2BPnoVvjiIy/y4G/e
      AkBoPoKiKuw/fIy3HVrJ7HmzCUFgwLGUPz4Dc9lTfOQ1K+jv72d0dNS4NicejxtmkCAULrEN
      hUJFRAoLDGC9dVAncvPxTz2FQb+YoYBKaexfEAS+v3+Sr+wNMexbTdLp4/G5TVy1YZSuUAa3
      W0RSFSIplUenNhb6ZJEaYGp2jrDcuJgqNUNr8hzT3iUlz7tc49zW/CR+KcGe6OW8GN6GJ185
      YrQ0vIe0HCh5frFRnMb0GOP+1RXLyILCv63/Prc0nzGe3d+1j989eB8vhpfU0EvtWJaT/O/u
      /TkfXfE9Q5bc1HyUK+rPcvuuv+BMciE8fVOPyInpJD19/TiMwzEqf/3YIM7xEyQ9G23bX+pa
      uFy2UGfhzIH+4WpBKJzW0pPRzNLaLnnOGJNJk8wOjxP6yhMo4TiS24mmqGg5hZ+tXctMXw8N
      jiRnk61kVQk0jZGoRkJqJOQsJGd+/My9/OflY1zVP3C+7YIT/C8Hz2tUYbEMEIqRcFSO74so
      vKvnP3hr53/S5pzhSHwNnxx8kO3hq8rX0fJ4lDh50RwN0HhH1zf4zMqP4JYyxgB+NnsL7zz4
      9ywP7+Zs3eYiInDlEzSnR1FEB+P+VYsZWk3gUqrvIN/SfJrV0ef4xYkkK3vreGHvCG3tDfzl
      uie5c/fvoi7+u4RlQdCUwqSYCMgjZnhP76M8u2OS+FyczZuaGZhIoTncvKv3Cd5/4q0ArNJG
      uKwBvnVG5rG3LzUiKf++fYQvRi5nZT5PUrTfQPrOiI+3aAvfeIaFDMu5uTnj2KXVRKmUMmE2
      YzRNY/y5/fDgN2lNWa7qDwi86b40fZe9iCDAXNbHB0/ey3MjnWiSQGNu3Cgbyfu4c/cHubHp
      iG0YlMVGgeZS1TIWNT63+kP8fvfXjScdrmluaNjOmw5+hcfmbrWt1ZIaYty3oujZtfU7+dzq
      DyELCzkkggCvafkFf73mU7z/0Efojx4kLziQtBx50YWsZpl3d9KWOGPt4r8N1gemQNGIxzII
      qNS3NaGF52mQwgTkDJF89YBArTDhW0F3/BhxRxNhd0HqNTljBJ1Z5kMJ3EqOJ3fOcPlldZya
      yrG0dyGClVNU/mJwJf937Shu10Is/vEJF5ogcrL+yrL9esSFTS796kxzZCYajeJwOIyzy7Is
      43Q6SaVSJekPdklyky8eQnrPN3DlSpnF/5EgSts8Wt7BicEIoflRPtD1BWLht7MvvhTVspuu
      IvLk3AaY1diS3EWjPEFnbgwPee5bs8go0EwVAbjef4x3dH2Dg4ezzKVhS7/I04cVVi5V+PTK
      j/Hzl25e4L6iUYM3FyErLaRL/F7XN5EFhV070rgCIoeGVZZ0Srxqo4P72n7IX3j+khmtz9jV
      NENdemIxw7qkMJ4O4gi6qXdrHDk1x9mxCB1NAfKCm6RyaXegFdHJaGAtdZkpWpKDzHj7mcsG
      iOa9uLJpfMs62f2zAV5zdROnpvIMJNuMugNyH6KaZ33rQhRpJhTmVLYeKvjUbiXBm1curKEs
      y8bhklgsZjzP5XKGU6unQUD502X688G9R5D/5Jv4bYhfaBZxXefk+UdOsrrVibSsh/HTs1x7
      ZTdfaHmYpOZiYM7Hnw+3cjrZXlL/Bt8omcwAjW0N/Pb1a1na2704BohUuYP1mvpdqDmFE6Ma
      W7vg8T05mpc42H8gy313DdPlmmA001VSb8q3jK7YMcLuBfOqz1PIAg2FVDwILF/j4NzBLGx0
      4JVStDhnOZ1fXtIW8LJGa6rBI9NreFfvcm64cYExNQ3+8tRV5LSXZy8j4mqjMT1Ge+IMk95l
      /PO52/joG2IIArx6wxYAbml1c/uuYg28Xh5jZd9C6sXnX5xmSipvOspqlpsdJ7l17Qp+tOs0
      l3U10B70EY1GCQQCJccNdTB/AUcHPaSpnxcOBAIcO3KUc5/4Fhsj9u2IQQEEgY6gzJ5Zhbde
      5eDw+Xf1rjT1pOnsivCjln/i5l0fYCJT2AR0Kil60gO8al2A7s4O1q9ba0SUamYATdMIZSpT
      VkpxI4iQzWnMRKEpIPD4z9Ncd40LDYGMWubopaaV5PkMpXq4tn6X8fe+Azk6ggWkk4qHmaz9
      wZLFgIhKl3uOWN5DOF97qnYliObd/Ob+3+aDy55hW/0IoZyHr45cwXcnX969i5C7C28uQmtq
      iH8Zvo2Y4imJApkdYICrGtMEvAsZmo1u81uN+zse4R3d36XLPcXp5BJeGr+BP739bj7w47N8
      YfYybj56hp+8tZ+JiYmSb0vYZYS6XC7jE1Hmk2L655T6ly1luqkRoUxOgDKsoIZVtl7RQfp4
      HAG4bHkTf/GJZ3jbnX0MJyRyziCp8RM8sP5Fvn5qC1vmfs7rL+/izms20tx8WYnJtSgNcHCu
      MgP8InQDGcHLHVdpzKRgU4vA5stdxCIqOyJXMJMrR7RaiWn05bH7ua/9h9z+moJZZM7g+a+p
      NxLO1y8G9RK4vWUPn1z5H3R75lA0gZ/NXMGfHH8HoVxtIchKMJ6p433HXr/oerKaxZcLI2ml
      ufO1gjc3DyzhG2PX842xynlPPrlY6ByYXfj9L5f+K3/a/2XDv253zXFdwz5+vifFl2ffCoLA
      obCL1PnL0syZmdZkNofDgdfrZWZmhkwmY5sMJ8syHpcbt3I+QtQahPkEQs40F3mIfyZG4K+C
      3LS1kGN02cpmtl7eyq5907Svauf48UlIJejZMsvH10xw71V32374xei34gyZYHpmjl2zcsVE
      0PFMO3988m/5/OoP0CwWEHcBCbGL9+z7VK1dAbA9fCUPnvjbkijQT2dv4c9OfXRRbVnh8uAZ
      vrz+H3CJBbtUEjTubN2NX0px3/4/v6SRmsWAW00QlxpLcoIWBTWenJLULK9bXnzd4m298K15
      lW7PJA8u+Tq7dkZYsi7A2QNROvs9JPMim9q/jSTdT06FhFzH0OgEbU3Fwsgap/f7/UxOTpLP
      5UmcmyB3ZhLBKdO0bQ0t/T1MT08zf3aUkT/6Eq2iC+WbfwB9zRBLI37ixwjbTxvtZX+RYS8K
      x/7w1TTICda6BmnraMCn5mgIurl2WxOZ2RDprMLdN6ypeqlwzQywa2CGCU/pLm0xCHxt/M0c
      iK3jLR3fNcKgXx67n1BusfsHAl8aeys/m72F25qfwi/FjX2AizXy7/P+iCdeGOfEgRlu2FbP
      mZk8y/v8KLntrPEPczS+5KLav1BQBAcxZ1NRMGCx4FYSNe2Ue5UY/a3FW/Z3rGunfe8UVwSP
      4hJzTM7niRxJcmxnlE0uibm0xD19IZZ7hzgSX0lSDnDw7H7u7e8t+nQRFGdlxuNx6urqeP6u
      D9J/MGRkJ895JAb8Ip6Ugj+p0qjCQxun2CjlOfnjHyI6gziv9XD7LgnRpAmGJz386Yn7QNO4
      XX2Mz92Yo/7yBfNusKmFho5X13Sjdk0MoGkaT47VKhUFDsbWczC2vsbylWEs08lXxu6/JG3p
      sLwtxdSxCMuX+dgzlOPt9/Tw+S+d4r1/sIb2A2GOltlnc6hp+iIHLh4BQWDe1YmAgicXI+Wo
      I+JqRRUksqK7ev1KTWtKTRosI3qYj8/RuRAYIhgM0uuYJHXeVxOcEonxJA1dxTil1PN/CyIz
      YlNR9McKeraoqqoEb70cDj5pvPOkFDypYnOv6cptzJw7iujw0+qI4Fx+DULjOZhayCvKSC5A
      4/qmMd7THSehbkRWpnh+Lsih2QaUSJDPXF1bzlbNGqDeeYluLfhvgGr64Wiin16nyIbLW3l+
      5yxOWWLT+kYUTeZ0orNsvZzoZugS3VkazEyTF5xM+/rx5sL0RI/gVFIVsd8QmOGN7adxigpP
      zPbxzFxPSfmQu5Pe2FHG/SstG4vFkJW87B0bZa0po0QQBDp98FR4E7PZOq7ZnCefVXE5BQRJ
      IKcKHImt4FzyfCRPU1lXnyuqL8uycRorEAjgcrmIRqNMTU0RPztGtfs4GocTNF+1jKSQo73O
      jysrw3RxUl13cIJP5D/C9b1LcSlxMnEPoZxAKurhLemHEOqXMB/aQGNT9UBJzdeiXNMhwGgt
      pX/5UO2GhS+O3M4Td7xAuyvMkjcW0rNvvLaNLw7fwnC6/F2blxL01GSAuLOZuLOZ5fO7CGTn
      iLlKF+62lkH+ce1TOM6ftX5z5wk+O7iFz5/bXFQu6WhgTPJzd+ybXN9yFg3QNMH0U0A9//sK
      1+1FdRVF4WxMJCIGee/xD/PVdR/CLS3EvkPZOt69/8MoSKCp/FHrSbas7i/c2i3LxudUNU0z
      UqLj8Tj5TJbZf3yE3h+eqCqcrnhmAm3dWnq3LofhOcR/+A6CyVfXgO4rwiipMQ4cyRGITzHi
      6KFBnUNlmO7lWUYarqehsbarb2o/E1xrwV8FqHKDwESmidfu/is+uOy/uLL+JJG8j4fGb+DL
      I/Y71RcKIipX1o/R5Y5xKNbKqURliTRQt5m21GAJA0iCyp8t28X0mVNEfB1MHTpA+7r1vLvv
      AN8ZX81stthnUEQHj3vu5I+972Nr63TZ/k6Ixcyz//QoJymkQ/9k5kau3fkQD3T++HwYtI+v
      jt7NZLaQ1PfJjl287VWFfRi3243X6yWRSDA3N2dEhDxeL7vPTNP9/i/TPFqbYy+kcwif+VnZ
      92mXQOPqPGdGG5FFkB0yqFkGz86iOp3ElnhxqpGSjxWWg5oZ4Nq1S7jxxV2cSVkdtMrE5lRS
      ZCucB9DPRHlzEbpix0zPzEnWhT6c+SSZKkcnAZxy9YEPpVv5w6PvqVruQsErZfm39T/husbC
      hp6qwb8OXcGnB66hnDhRRRmHmkZSsyjiwq5xUM7Q4kwyEY8TI0Vcc3DyyCBreoJ0ueMlDAAQ
      cbbwrokHebHxL3DJ9mskj/+YfP4OZNmBoih8bEeejLiwVqeS/Xz4zP9XUq9NneO2Nc14PB7j
      i0LDw8O43W76+vqIRqM8tesYf3W6nbHMEt6zZBlyT0kzVeHWQ0epSxT7CKF6Cbn7ZuaHTlAn
      ZBkOC7i8aW67+xay81GyS5fjH3+cifFrCYcjdHV309BQPgBTMwN43C7aG/08HavtbkwdOuMn
      qmZQ1grt0aOMzZ6qeJMywLLGi98ku1h4R89+hh//FpM3XsbQeJyzZ2e4cXOIZ+qWsDtSuhuu
      Q8jVSV12pnBk8TxE8y5mzhP5xNkRsjiJzs4Tz0uMpcvHuK91HcQplRdQrfIwI0Nn8de18C9P
      neLIdJBO4XhRGYeSISe6EDUVh5rFmUvxZ5vz1PuXEgqFEEWRbDZLd3c34bkQ//Wxf2D4yb0c
      XLqRo1e/H9zwN3d8sNZpK4LH1z/BF/79q4imIbQvbeDA/rNsum4LDW6ZmfBObt/Ww3efP0V3
      ZyfnXjjILdfdSvjgN0h714KavTQMIAgCb14l8Z97qpd9eeF/hjF2dcMI034nB/YNorq8zIZT
      yBJc2TBWkQFyoouGzEQRAyiayN+d3cY/boqzXNSPGcJnBy4vlf6ahj83zxXs48Hen1XcFgi4
      FF7//WGOeZoIyVdDaQY5XbETvO+hjyGpC1Q4/bDAM2+6lu6r1rJp82YmzgwxdugUez//PbTJ
      aCHMWYbvBDRe33aSaxpGmM+5+c/xdZxLNdiWPdx+Oec6vk3/eGrBKmhyEU3GaQp6cJ2Xg0o2
      RSim4gvHSERDKKIHIbiMnv7NdHVVVj2L2glO2SQo/a+CRfBeKOvF4fUjxeZIOwtEqioaoWzl
      bNCM7C848ZY055/P9HPv3tfxxvbTuIqiQMWwLH2UR7v/nP7GJGIVfDVgTm4mJFc6rFMaUpAU
      jen/eoHp725nV9CJYz5T89R8es0T3NN+3Bja/V2H+a3993Ao1lZSNuZq5j1v/WPu3vM0b3lu
      B5oIM+eivOo9l7NrxxHWrF3O6hW9gEJrUwPp3ELCnbtxBdlMlumpSdo7ykf2FsUAo4n/GdLX
      m5sv+BNlLlta9NGY8+00pUZRkAu+iaWZSd+yolvd/mN0I9+64SxOcSF8PJYO8NNdZRL4zN0J
      EpKWRxGKz/sejrVwOFb5ZNk510qmckGWCcnq46L6TNhefyZBsNlJJppHnK/9to51gSleKz7J
      P3xthJ5WN+0+gbG4xgeu7uCBA28o6c2fDZFw1PO5G9/LT9dfzwO7vsVko5PX5JZx1bYADhma
      1DZCOTf3vmYh6uML9tDavrLqp1thkclwB2cuQAP8EpTG4ZgCsYMlz/vkNKOrfveC2x0N2n/H
      y5OP0pCeYNq3sPmyO9LF2w++nvcu2UWnO8bBaBufOnsN4RrOA+QEJ7KavaAD7x35MXr9xRtT
      GgKK5EVS0ggo5hcGyfmkFDc0HiYgp9gZXsVg6nw6sUWI9FxVx5bf68Jd70DNa5x5fJb9Xx+n
      NH2pdOGXeefPS36BlqYgJ46eJZSGa24K2XxEERqyU+Qbu3ldwwhzDW0cn+rk7sFBpD/6T0ZU
      Fda1Uf+G61l+2zVkM2HyuRRubz2BYEtNESBYVC7QLI/MNBkH4v9nwn8vN74w38sL8/bXwFSC
      pLOepZE9hF3tFEhURdQ0NAQ0ofANS0FTETUVARXhfDZtwtnAZxo/S5dvIeSY8PQSrt+MKrkR
      1BzB6BEC8ZNFBHdF3Sm+tuGztLkK16/kNZG/H3gjnxm8pyhLt36Jm63vaufowAwbgh2EIgk6
      rvESmW/l7A8Xwq0aEK0rdc7PJhsQHC6u2racq1b7cYgijXKWHbN1titzbXuUD21+GpdU2FiL
      e/xEf9pK0wfeTMeGVdTV15mk/IXdxFAzAwxNhQg77L/wUhEusdWkXVR7L48Jd6nZKu5oJOFo
      YGKRxzrviH6XuzoX7Ouso4FQ45XMzMaQ5Ry+oI9I3SbkfBxvupBy7JXSfGn9V/ClpwhnRMIJ
      hYBT4P393+dAdBknogtaqO+6Bn765HGuv66fR585Sy4VZ2nAiXNzH8KPp9E/cSAAOblUex2J
      tfFI+jruWXMcBLh6ax85Fb5ychkBOU3MpB1lQeX32/fwqS8fY323k9ff8WqeOnuE3/7YO2ht
      L01rvlComQE2r1nGn5w5wWcnqyXELQ4EVN7Q+mPe2PpjAnKMPZEtfGH0nczlatvJE1G5Z8Ve
      3rDsAH5nhp0T/Xzh8PWEbMKDi7lie3FQuKMzmJkuela1N5tF1Ouk5KDtHUmVYEv9SFHYM+Xp
      BkHihRcOEQz4WHvVBtr9DlLeXoMBttWdpss1x+F9U4RkN88cjLKl08lNt/byhraX+LuBVxvt
      yS4RNSdQV+cjlxpjcnSWuCSzpau/SLakfRITbvu08g8cv5UXQr1c2zjMXa27qZNm+IfLBvm0
      KvFvw9fzibN3oiHS4kzT6MiwtNXL2cmFi8Hy2VjJLRMXAzUzgCzLfOyOfg5/e4AnUpfmcigR
      hX9f+27e2vkt49mdLT/j97q/ym/sfZQzycoOoyQofO22r/KW1TuNZ69bepB3rHueW37wfxiI
      LP4WaAmFe9u/z10tP8UrJnkpciX/Pvp7Vc8fSOSRNfuTTGYoujhRNT3UigupgoQ/F6I+PcFI
      sLbEwh2pNSjqo0iLyOZ2S9kiPrx8pZ/9+0LcdCt4pGwRYhMHYlz3QDfPvXSOG69fyeR4Ew0u
      iYnjiSIfYKyhnrhgn4ekIfDDqdU0Oaa4v2PG6NspKrxnyVPM5fx8afAavLOnSC1xsnbTWmJP
      PcXI4DBNzW3IzsAlI35YZBTI43bzlqVZnji6iEoVxOB97d/ngfZvcnpYjNkzAgAAIABJREFU
      o7NBYC6u0dYq4oiN8q9r3sute39KJbPl/tU7+a0VO5ieB0mF+ajG6LTGihWz/MtN3+T2hx+s
      WN8KDiHH19e/nXvbHjae3dX6U97e9TVu2/sThtPl7fmYo6kodn8pQFJz9MaOlIREy8F2+Tp+
      PPkYb+g8ggB4UqNEA6tZvboPl0Pg5NEhGq9YSlNyGCgszb7IcuL5F2nrqSMoyuB04tVUHBI8
      F1qHYNKa43ujtK3zc/1rlyMIAo0r2wkNJBn67sL17aoIB5u7iMZm6T3+bwC0KVH+bPsxkm6R
      eb/EobY6fudNU/zZPw/z7ps7+crzcbo8GTobNN6wPINr+y4e33gjH567m89etodNb78bgKWr
      6wnULfnlMQBwSc3oe9oeRlPga9/N8xtXiYQy0BSG0QGVu+/YSadrgvFM+Rjum1buIZ+BZ/Yr
      BDKw9WaJPYdUbrhSoCFwmjZvlKmkyTmqgvvvdH6de9seZnpSJZyHjoDAmSmNTSsH+Nzq93P3
      ge9Ub6QCFHKDjrHUO87ZZBc7w6YrOmxAFcTCrneNC56SArwz/GGC4ge5uX0QZ26extBO1q4s
      OMHLluYIRg/iOW/+5BSRsVwLHz39Fj61+qtIQkElLbmhi6fn1vPQ+PV0cqyoj/1fG2fwmRCN
      y7ykQjkmD8XQ1AIzjbcFab+mibs3BcgoSb5/0s/uCReOfJqcJvGZNZdxytvALf5z+DwadZ56
      DsxvoL1uApfPzbVXtvHUyb381puH+aNlX2cmX88PJrZxan45H9sq0d65rOQ26YuFRTPAmmYH
      spolL9aISIW1q5fDAFy+UeTAQYWrX+vg2IsKXWskZCFPQCqfZw7Q4EoiFL75gKZRtPHjlBT8
      jgxFV9lWMcrvaXuYTFzlyYMqr3+VxPd/rnDNGoHnjqrcsOo5mhyhmn2T0rHG+PrGT3BdwxHj
      2bOhjbzt0IeI5n22dTRBYtrTS1/kgG0adpMjRoszxmCqhYxacDojcjMPzHyUA/7fp9WfxZca
      xpsaQZE8SEqmKAw6kfAyJvfytbF1HI71cW/7i/jlFC/Or+F7k9eS1wp7HlOdLbRMziLnCwwS
      HkoTHlr4Nq8GnO5tof+B5fz2xiSCUMjXemBdjP/zZDOPHfXxtuuuJSm4cJLn45v20+6U8QrN
      HDx6DqdDJj47yBfH5/m9t66l3XsWgDrXFMt9jzDbdRW9Pb9bc2hzMbDos3/9Hc20aqGay8+7
      O8t+5+tAbCOCCGtXiFx5hURXg0B/j8C2ywRCuUaGKpgcAPume3G4YWmjgK9doNEB61YVhjSd
      DDAat99iLwcNjjD5LHg8Al43SDI01gnEExouMYNHrHQvTGXu+vjKL7Na2Us6lWN2Psveg/Nc
      4dvPx5Z/tWK9pKN0DF4xwz9f9g0OveojPHPVpzh83Yd5oHO7gcO8o5XPDt/G189djqIW3HFZ
      SRbvAQCdviQ9uXMA7Iuu4EOn3sb7jr2Lb09cb3xOVpVkPvfa/8vT196BWoZa9q7qIbaqgZ7k
      cX70433MjE7y3R8fZjqhcJO4i7TTTVJw0UqM/1j7FGtb4gQlgRWtrfz2215PV72X1t5+3vWO
      ezi1L8Jj20c5cDrCD35wgl2H52iWd5PN1H4N/2Jg0QxQXxfk365L41Jq22lMyUHijgY646dK
      3v3T8B8yrzayuk/kym0ynUGBV18nE3AIfPrcn5BWK28afW7/LcxnvGzdLHH9ZgkQWLdaRNPg
      k7vvIFPhm1x2sD+2EV+jQE8QDpzVuGKVwJ5zGjdvFhnPdDCdLedUVzZRvFKa25p3sX37HD95
      epq9O2dwNXpQFI3bW3biFhf37YOPr3yYezv2Ip1PlA860nxy9fe4qamQyJYXXfy9/CCPJq6u
      mA4RyzrISfYn0FqS51gSPUhG8qIKEk+ufjP/9Fsf5cWt13N89WX8/Ia7iNV7UCWBl5r6SPb1
      EpkP48gleXTHJFdvbWffngHQVNYEkwRI89Q1j/LmFcOoshNJTSIpEfbu3EewtR2nprDn0Gli
      c/NsvbqLs8dmmJlLI4oCmqag5sp/sO9iYNEmkCAI/MbGPh5Kn+I39y6peOpIh4zsZ8bTQ0/8
      GCP+hWzS4XQfd+z7EV+67A9ZHyh41rG8n78d/FM+N1Q9VflspJU7fvggX771a6xtKlyJF8m4
      +eudd/HPB29a7ND43ND7eFPbD9iyacH0WgmomsDfnXo/Wa38WCuxgEPI4xAUspkccxmRO9/Q
      ya7t08zPB1i7Ol90+121toNykr7hh/nS3iSbgjl2h0RahDySADeufYGn5grzK6p5fjP4TEX3
      4QvjNzLoWFHyXNAUNrvOct+VcVb55xhM1f+/9t48PK67yvP+3Fu39ipVSaV9sSVbsrwvie3Y
      sbPvJCQhCZAEmmW6gR6WAE0PL0w3A2/TQ+/0C3RPB+h+YGA6DYGESSAr2RM7seN9k2VJlqzF
      kqza9+Uu7x/lW6oqVcmSLG9pf58ni0q3frp165zf7yzfcw7fPb6ZveJyhtdPfn/Ha5ez/NCv
      6Dd4qI0mEdQwnhXL2PPbfTTcv4anf7GDmz9yCz9wvExfxM6SZpWAZzWKlN3Ybnp/JTFWku3E
      tQI14+XASC9vv23EVevEeyqKqmoIggHReG5mO8+px7ggCNy1sYM79uzk9+pqWhnHlzYiCxIB
      89SOXJDtfjxiW0Jj5ChjjvZc0fae8BVc8c47tFv7cEoRjsY6SagzLwrfMbaIVT//Fh3ucezG
      FEcDDSTk0v7JmeLyR2Od3L33CR5d/nmW2rMnVjDj4lt9f86/jXxixvdUjJBsZ1+knVWrx6iq
      FNl3JIJqkljSYmZ3eAnRaeYHF9+53ZDGLGlYJUggYlPT4HKxuU3k56e8Be9Rpmnxtv1kLf+Q
      /hQYJzWkOj5IUnKwRj3In1+5m5pKAyP9Xq5cWMv3Wo7xqYE/ojuvqCdicfNc9TI0BHaOWvjq
      B25hU1OSTcuznaY/++W7SIyP0do4wWbRxzHaqZJsTHhjmA0qSSFNg92LEEhycNDBqcMiN/2X
      lQhaNpN98+YsQU6wXYfJfPbtakphzk32BUHgW3e00vb6u4wHY7ymLcOs5c+l1XiwYQ8PN71L
      kznEqbSTl31L+O7xG6hODBE3VBA16Txtgd7EmUli5aAhcCxYWvFmi23Bq1m9fRcdtl5shjhH
      Y0tJqtMXqmt5/y4NgS8c+SL/a4XC0spD1J4mPr7uX8OXuz7PbCJL46kKhivXsHllN6oi4GzU
      sKoZhqIw5roaTrspqmjkD6Pf5pVjT/LfG56gxVlYkXXQX8OCyAFC5losSpyw0YNJS5HCxvVL
      Uowe6uJ3E3Huum4ZTz3xFotWd/KHLXv56tHJqrkJWxtNjv2ciCRQEfjYb+u4tS3ONS0JkooA
      fi+fa+5GMEPK4magawJfQqF3TEaLBslkBO69oxNXpocK1YZnfTUR8TOImYMY4nuwVq/EaF+L
      1bX2nDjAcJYKsLqtnvtCQX695yThmIeENKmlm939/N3SJ+g6MkpFRz0pXz+fXziCN+3gp8Ob
      cCdHqUiNEzZPpcFeaGiIHIvPgfYxDYaTtdy7+zuzCoOWgorIX4c+w2NtP6TdNpG9Xw2eGLuS
      X3ZdU3BtwuDkX/k4+/rbeX3FN3NZYk2D54Rb6Kq6JhtiLcozKEYbYKChykISE26nlbWdtYxM
      FDVGEASCjdfT1v8U/RkT0YzIk8ccPHnMAWg8tfodnObTFGU01q5v5i//vx18/pEtPP7YCVIa
      pLVsyeey2hBPdTm5+46ldD37c8yLP0h90+YZTZU8G5z1mJWlC+t54jUrFmIFCvDBhr28+UoX
      nesXI6oyb756iMWb1/Ghpj38dHgTQUsDrtQ41YkhvNY51MtdglAReTu4kreDpVmlM8WJRDU3
      7fhv3OTpos4c4kCkhV2hVsqdJEM0E0lJVFkzpBWBPz32IXZq6yaFvkjAnj3VzofWLWZ1hYmg
      P8FVm5ciGQR+e2rqpiAIAt9cfpD/eaSNqGJCUQXure7j4YXH2dgwOfPSmAxhdLfyBw+txW0U
      +NCDVyJl0kiJEMmkSq/XTrVd4cih/aTsq1i1YuOM6Mxni7NWAHeFk2tqTvF4uDBkaTVkCCdU
      qirMxIZPEjG6OHZkiM0tk6ZOyFyHPRPAkxjCNwMlENBwkgRtJjwbiqwSAQsZTGWiV+U7SeQN
      byj1upBtaWhQM0j6JEst75L8Dsgl/up00D+locC0zCKpmnhmovQAi2IEJQ+7xzz8LHk360zd
      vJVey4Stuez1ByL1fHv0Xv6H4w3qayWispG/7NnMq77WgutuSP+e7zc+ytKqILfVZBNmRlGj
      ypaZ4nyLmorL201HUzuKZMRjBGMyRoW/l6SgMRqrIKpW0lnfiKF5QcE0yXMJIZlMajPpoDUd
      4okkbxw4zoM7m4mdPgU+2LCHv275GTsOTOCym+hc1cDxnlO8Zb2Pv+h9X8H7rZkQVjmC31r+
      SwFojBwlJZVOGhV1mS95TXX8BH5rebpCvs7k1iu5lIZZiSINvU6Ys2tkVbhq0d8+jSqnh2ML
      7j+rtZtix4hKLkKzMDmNgkKdOcZE2kZKLdwrb04+y08W/RP1jtmFcDVANZgQNBVBlSdLHTV4
      smcV9ZUGlt7ydTwz6OkzH5iXSXM2qwW33YySV6z+xOharnYf50Nb9uYEK1J3Fd8tEZ5MGF2o
      giHX474cNEGY0UlRDiYlPm9THm2ZIA7NRPAMCiAjIJ/lQD+npuFIzz4OrggSCaMLd3KMqvgQ
      IZcHsxxDA5q8b6NmEqdPPoWtzUPcvrQPpyVFT6Cexw+uYjThQhEMVCIiCWAQBUxKghXxnVxb
      f4JnBhtREFA1sJFhTWUge+AJIAkaRoOaNz1WOD0XOn8c0mS0TgOWVvSRTBk4fOgg1153w9wf
      2Cwwb6MW/XGZpGGSgqwi8uWu+/npyCZWOEYZTFSyPbCobNu+lOQgjEBj9BgnHaUd0FK1shcK
      FjmKtWUzVSVmkeWj0reHw5FilqjGA0u6+dzaPbRWhDgecvP9PVfyVF8HpQwlUY7POPFI3gpW
      OURQTVMTPcbYqT5Mp46jn/VjGImc/umRdbv4q2teyyXNbq6Be5te4tZff5je4NSOCl0s4tfH
      8zcSjS/W7uGjy4dya2iCQMZqQxVFpHQKQzo9bazLGzPhsaUZCFjpGhyYV8rzdJg3Bbj1isV8
      YfgoPxjrzBNQgf3hZvaHpzdtdKQkO15rM83RroJxqTXxAaxKBIscY2y+bvgsIaDhtS0gVoKq
      kA9LuBco3L2/dMUu/ufW13PCUm+PsalhhK+8fiOP7r9iyhoxRcBvaTpjO5hidAROYjDKaJFh
      Rku1fAAWOEN8c8PrvL0rgsFsoLZCZGGTCTEd5m+ueY37f/sByjnXHmKsc05wZ80gn1vZk/s8
      imQkUluPJunipWGKRLAFfGWV4LjPSl+oFr/9GuKxOLFYFIdj+s1lPjBvbrYkSfzVXYvYah44
      q3XSBhvj1jaao5P9aSxKjEHHSnrd689u95/Xepi5LVZjjfH1q94m6E3x0pthRgMKB48lOHI0
      ztc3bsNtTk55jyKnMKpTX5/+9jS81hZscphksjyp8NrmIWxWDTGiUNdm4Y2XAxw4EueVvQmu
      aR7CKk11wAVN40rjCNu2PsVT177Cl9Ycw2iYzIbEqmt4cdsoEW+EAV+anTtHORwQSdtK+28A
      i6pTuC0pLKGdLHD6mJiYmN3nnSPmddq02WTin2+ycP/zY/Rqc09MZQwWxmyLaYx2c9LRiSxI
      CGgXZjj2PGN1zQQVpjSPvx3j/jvd/PLZEOPDcVqXVbByWYoVHi/bThaemHFVxCzHCtqmr3X2
      8UDDNlxSjHeCS/nV6FbSWl7kRBAImBtoGX+VPerMd9LaZivekSSqZapvYyXNBssoDy04zic7
      j5fsOKcaJBSjiYHeCcRMGn9KoHZRLRsXOMjEBMzxqS0SZQVc5hSqqiJYY4wZmqisrDovZtC8
      S9Ty1gZ+c8sJNj8bJCrNfYqLLJoYsy2mPtqDLJoxK1GSUul0uEVM8Ymm33Jd1R4yqsSzE1v4
      1djNU6kAZ3iWV1Z08fGm39FonqA7tpAfDt3HYLL0WFhhhuWVxX8yKWcfudkA/pCC0SxSU2ci
      FpZRNUjIU7+SNAYqMyEi5iwZ76GG1/jHZT9GOt1y5aHGN/hg/Vs8uO+rJPPGUDXEehiMxEEo
      3z3ujeEWErKB5jYLDpNAx2ILdqOKJ23gzeGW3P04SPH9zjf55PKBgveXc8nqWz2M9Y/j7Ggk
      EkgST1jKlq1HUkZ2n6wk7VxNa4OTTVs+zY4dO9i6dWvZ+54vnJMttaO1mS817ucvT021Z2cD
      VZQYty+iLbQXWTSVVAC7IcFv1v0pV7kny9TuqXuDW6p38OlDf1aoBNPI7IfrX+Sfl/8NxtOT
      bW6p3slHGp/jvr1/x55w6TroM3WhzqLwmn0TtQyGndx1q8q+ownuuamCQFDGoEG3380R39Tw
      n4CGdlrKqoxhvr3k5/jGQwwGVJodsL8/Tmdnko81vcKPhu7Ivc+RmkATZGqZ2k81V3scMfCD
      7Vfwp9e8iyhAZXt257fEzHzl1xvwaDEE4L827Gdr7Th9Pmu2zYoCb3nreLR/KXFZosqUpNKU
      ps4Y55HbA2y+og5hlQfRYSU6EcEflakWSjfIDaVMdNQkGHBfSduma9i/fx+dnUsuLSc4HwaD
      gS1tTijfmHjG0AQDp2xtmMrYwJ9peYKr3IfpPhpGcJixyDL7jsa5dutL3Fl7HU+fmn5OFkCl
      FOZrlX/L7u4IdoMKCRlno53w0BB/7P57PhP+8awpC+UQy5j47Mu38Ys7n+LKVdk16zxGQikT
      X/ztbSSVqV+JmGf+ranox22M88LhIP6EilRpZEGHi3d3+7hu46GcAjRFukiaXISWPDxlPQEt
      Z16CxnejD/DW7i4+3Pg8NaYA+yOdPPeWmcOBbEGMhsA/jK7n70c3AFBFnIhgKcyBJDXubJrg
      ysVpgoqZlR4ZhOzvKxe6MEUimAJTFUDVoNqW5O1BDxMjz8Dma9iwYePZPOJZ4ZwZ1S1uM27Z
      T0ywFnRMmwuiJg8tkUMla25v9uwENLr6E8hCmvtvqeKVdyN47CI3e3YWKkCZDeVKVxdC2MeO
      AymqbBpVZgEhBpHeEJaV3dSbfYymimsBZmYCqUYHZsZI5T3qlwdb2fjYx/nEioO5MOhPDq1i
      MFLaSBAEcgqQUExomsrgUAxZ0Zgw2dn9fwe4/saFjOfNIXbIAbrdm8sGDRKSk7hx0kR9NXg1
      rwavzv3cor1IRCide4hrMlYtTRhzbv3/d2svn79iMO/PCRwPWvnhvhaGJwz8oPM1FpewiJ/v
      76BxzYMs6mxmS0MDlhK+x7nEOVOAJW0t7LlvlGQqzIA/yd4JjW/3LSQ5x/lXXusCmqNHGHZM
      7U6diWcYGsuQkjNs3+5jw9UeDHM4Pdd1WnjyJT+3rnOgRFLY3CbKzcWZ6fJD1ZupNTpxpiYI
      T/QwqjlAEOgPufnm9mvOvMDpv6UKWVNuX3gR/dE67r1XxmHUCERVtt7YjH8iyaPjmwGoi/US
      s9bw8eZtbKnsJSJb+PXYet4OLgYEzHIU+QyjmFSzG0Hz5kyvfAQEG2YtQzNBhqlkaVWUz64b
      ZNeuk0hOG/UOgd6TSTatr2XveAW7xlzcMXE7L17zPK2ubD5DUaFXuIUbPvoIVuvcZ6KdLc6Z
      AgiCQCadZjyUQAlP8In1y2ioGOVHB2VC2OjSZpfRrUqeZMIytUTyJd9GNjbv4aMfakRIyZyc
      SOMdjhGsrOAlX9FRWmbT3h1ahnlRPVdYYjRWSlRWGEHVECWBXdHljHWVKsbQZugDwCnXSk4B
      Fa7ltMaG0NJhbCkfA9E4CiJpJARNnRLnF1FREQsiYEnVzKe7vsjPVn8Xq8WP1QGKJvCr1EM8
      O7Eeo5KkITXA127s4XpPd26tBxt38PXuB/jZyBasSpSENP1cZNlShYRCpoyIpAQjgpbl+FxZ
      H8Ygyuw/GOADH6zl1VcHuP/97QgCbGwIsWvMRU+miju33crzW1+gpSLBtoFKVt7/qQsq/HAO
      FQCgrXUhwuAwNR0t2O12/qCmho9erdHVN8gnnz3EAcOSmRXXa9mUeqrEl/bDofu5vfrtrBNs
      N+Guyq7367EbeeZUURShjLwG5Aq+NfRl/nn539C+cFIIAxkH3+n+8rzZ/2FzXY7+bVAzNAT3
      Y0DGHeomZmuCVJhUzItW2Y5otGW70EaHSYRDxMVJZ35feDGbtv8D13kO4pLivBtaQt/pIdh1
      8T7Wtcukdz7JkTWL6H2ri5rOZgKBBB9r/yVPS+swxhMFnCCTkGaBdRRf2kXgdP+jqMmDS0jj
      nUZEhgQ3rZqfSFJEUwXuuXcxv3mqB5fdQDSewWaT8CcnQ7M9qSr+zfsgH+5YjsOVmbZv//nC
      OVUAQRBoWzh1p69yWnjrs008+no/X+tqOuNYUKOaKpsDiClW7t7z3ZmFQacJXf5y7FZ64y25
      MOjRWCs/GvpA+TDoWWbVFNHIcNV6AE5UXpWzpYunw1C1gbpYH9WJYRxpP+P27FS7uGrhuYkN
      U9b1JEdYUe1H9pk42XeKU94YloUK0UgKlzlNp2OUkUAKRZAQUHlk4f/hv7X+Gy5j9PTA8Gt5
      5OifMaFV0WgApq3WFDghVGEZ9DESsRId93PbrW3UVxg40Bumqa2B545PRrW+cXUNf/7QLecl
      ujNTnJfMkqZpnDgxSGvrQgD84RiaYODzN7azuPIED26vJmEofyQ3R4/SX1F+OmNSNfPo0AM8
      OvTAWd3n7vAydpcJeZbGPH2R+cUoJU5EXehbZzCiNSE5CaajVAkGIuNBahdUIkoS9R4Tew9N
      ELDaUcmgCEY+2/IY327/Xu7PZweGv06d2cetu/4VzC6IT9/tTkOgR67kT55exDduN9FcHUUQ
      wNnYwkNPryCUyp4AqyQfX7n3notK+OE8KYAgCCxcOGm/W00S9TUeBEHgjnULebDnGD/xl28E
      GzVW4kkOnxUTdL4haNp57/zuSPtojHSBoJ8/k8IkoIGmUZkc5VfjV/Hc9W9jM+QLbw3bA4vp
      21NLszaOUZT5UuvPEAT4/Qteapa6CA4n2brFyQbXIW6s2sHRESfE9RY4GncsCvD+xX4MIrzY
      7+bJY55sTgADO31VfPCxCmwuAwYBjgetOR9prUvhr+7agtV6dtHAc4Hzxi3QNV8QBBQNMpkM
      JpMJQRC4slrlJz4tV55nVFM45CA2JUKNWUE0JDkpT++0XRCc580savJw0jn9CWVSkwzGavnU
      wU/w90sfp8ESQtPgzcASPn/4IyiIKIJErcmHxxgCTSUsi/gPxRDlSfryUvtxDtjXYfBPoAgG
      vnH1EI9cOZo7Le7v9HFNS5gvv9yGhkBYsOLW/AwEHQUn2j2eEN//9N0saCrf4e9C4oKQa9pb
      C6M5H97QTCa1j0qzRrNNocJqxu2uwGF3I4oiP3h9kB8Mz67J1bmGkPfviwmaYKAqeZKXfStY
      v/1/sMg6QVSxMJpykbtrTSMgV5BQTfgGAoQ1kYg/g1OCXYcSbFppZSxdw4RzKfXGPdidaT53
      xSh79w4jSybWr/Tw4qtDPHwj/MeRGnaMZrlGfsFODTEymkitWeWR6zr46A134qo4Nx0d5gMX
      BbvM5XTwyeuWEIlMshYlSUIQBDRN4wvXLeCjwRAv9Izw+ICJXfLCaUevnh9cnPPSMqIZi5Kl
      PiiagZ74VFKigEpMsfHE2G38l/Yn+WRRQ47RVDUveLeiCBImg8gV9SGCAycJYsUtqoz1jtM9
      FGZdTGFDQySnAFHM1GgR7CYD37hzHR+8cdNFZ/MX46JQAEEQsFgsJBIJZDlLv1VVtaAouqrS
      zUMb3Ty4QeP4UB9P9Wv832EbxwytaML8tMxoiRzGoJ65xTmApKWZsJ55+otFzPCl1rd4X+1R
      NOCZU8v43sCWXC/P2UARpOkLgjQNqxyZNmAgaArp07OA/6znSzSYJ7i9+s3ckieTNXz04N8S
      kp24UmP4UzL+hITJZiYynCYYCjOkKSxpNLJjrxd/qlB74oKZ79zSfkkIP8xTTfB8IRaLFZwC
      oigiiiImkwmDwUAqla0/lWUZQRCQZYV9x0f5zQkjz0xUcco0vZ3ZGOnK2dAfsezmjtbJwh0A
      Uc3wj8dreVdunZfPI6DxLyuf5M7a7oLXnx5fxucP3zvjRJoOR9qPUU0SsJT+nC3hQwQtdURM
      5eciCJpCXayPsVzVncb6ikOscvYwka7kFd8m4qdbUtbG+vAPbEeQBF5/+CDmyBhhWaTaZaSm
      ysrhwQz3Pr+JQF6s/1MLEvzLVz5+zvr4zDcuihNAhyQV3o5+CthsNiRJwmKxIIoi4XAYWZaR
      JFi3uIF1i+HrySRv9e3l8QEzuyKT9m4+XLKfVOokArC0XuW6ZdmokiiKOXOruTbMF7efYK+6
      8Kw/T4fNy21VXfzmse2k6xqQIiEsZomrr1Nps13L8fjs2v3FjRU0RU4SsDQioPHRpnf5WNMO
      XMYE2/yLeGK3iyHT9C1XshMo84P7ArvCq9gVnjqEI2ry4CTFhGznI7/t5Ie3GVjVnO3I3ROw
      8MXtKwuE34DKA9esuWSEHy4yBTCZTNjtdmKxLGtQN4H0o1R/sBUVFWQyGUKhydE5VouFW1Y0
      cOtKgWQyiapOZfEIQhOaljr9tyZ3UU3Tcn9rUa2TX96R5o9e6ueNVPkC/ZmgzhxFkkSWd9SR
      aWrA5off7Qtzp02kzhSdtQKogoQqGjEqST7VtpM/a38hZ7p8uHEv6ypqeN+71xFXp8+ul2qz
      UgomNZkj8fUErNz4i5UsrEhhEDX6g5YpJ1inNcnG5VN7jV7MuKgUQPcFkskkiqJkK4QEgUQi
      gcPhKLiu3C6jaRqzNek0TSv4x2oy8i/Xq/zXl47yltw+50q03rgJYCo2AAAemklEQVSHhCJh
      c1qRTSInAirXLKtgOCLQF58bDSAhOXAS5dMLtvHE00d44J7lvPTCAcJSBffdBB9zPMszI+05
      H90qh/HaFuC3TFaZCaen2VUmR6hODJHRiXF6zwFODyPUBFSzkXCu84nAifBUEp0RBSsZNi2s
      wlVx7ut45xMXlQIAGI1GrFYr0Wg2kqGqKpnMzBzTs0HxiVFhM/PYPRYe39vFV/s6Zz4QJA+j
      qQp+MHA1f9opIwrQdk0HqgZ/03c9p9JzExRbJkjK2YJT0qVSpbs/TEpIoN7UilRZyVB40gyq
      jfcTlQpDyAIaN8k7eN20Fkc6gN/aTMzozk4aQShwst2matqi/ciqikFNI8oJVCVz+ucUBjmB
      wSARaLkdt3tgTp/pQuKiUwAAs9lMLBbL7ciqqk6JCum+Qb7TPBPokyKLIxSlJkhqmsYHVlby
      2OAIu5S5mUM/OLGFg5EG7qjtRtPg2YmlvOGfu2mlCgb8GQcjSReCkubgwZNsvHY5hliYaErl
      YGTStLvN0sNhxUFdfIA6p4nr6mVCGRGHM841C6349vWxxDLC9TW9jBkbaRAC7ByK8bS2ibCx
      iozBQtDaRHC6ZmKaypKJV0AQGfFFz1s7k/nCRRUF0qFpGoFAgHQ6DWSF3ePxTDF7FEXB6/XO
      avypvtPPpunqk/vG+WL/zNoQnkuImkJbeD99riu40dPNv63+d8zipEP79PhKPnfowyiI2OUQ
      P1zVz8hEADU8zsfuvpnamsJyy2AohKuiouA5aJrG/sNdfPvFIX5ruTkbYtY0bpC6kAwiLyfb
      UcWp+2Zz7Ch2Nc6uR1ZgsVxc8jQdLkoFgKkhUZvNhtPpnPJlhUIhksmZtwzJN3Vm2ny1ZzTA
      XduaiRsKzRZRU1iu9LG1NsNY0sDJqMoB2kiK85Okk9Q01elRksYKgoZKVib2Y5ZjYK9iTLbh
      qpL4cMMe1psGODLh4hvjD5AUrEVrpLgqs59HrjRz3zUzV+JgKMyN/3uENBKfWqrwodWV1NXW
      8P3nD/H1/s4pg1GMSoIloV38xwP1LOu8dBzhi1YBNE0jkUgQiURyO7zRaMTlciEIQi50OdtT
      QDerYOYKAPCrfRN8q6+VsDipBBsNx/n13TYEJnMWj+0Y5BsDncTF8j1wZgpBU/hOzVv0jYWo
      XtDOBzvNtDXV4XDYiccTvHJoiBeHNG6sTRCLhOnLuPmn4QUEDZM2v02O8McN/fz1/atmZZpo
      msbg8DANdXUFkxlVVeVzvzjEvwZXFfgKzZHD+C1N/PeOMb56e+clYwblFGBo4BgJzcqSttKM
      S01OsfPd3bhrm+lcnM2Ajhw/gqNxOS4LKKkQvcNROhc3cqynl47Fi9j2xmvYqhq5YvXcp8sr
      ikIoFMqZQwaDAYfDgSRJGI3GWZ8CczGB9Ot39gd4tEvilXgLsmDim00H+KOrCpvNGgwGXj46
      wWcPtBARzy4iIqkp/lB8ma/etYoFLdMzYXVf6U9+/Dw/Vm6mTZwgIcNftffxq5NuYqqRf7qr
      nsUNZ1+EEonGeOinB3hVWEdatGAQVN5n30etJc1A2M6vH1yMw35hK71mitMKYOL3v38JRVGo
      qqqiyiLizQikAmM0rbyO9noHh7a9iGP59Rza9iIVDityKkOVpwKTs5ax0WEamuuJ+NNEgqOM
      BWM8dN9dPP/S62SScdx2E9bKamLhKM7KCvxjPpatXEJ3dz/1VRZ6RuPccftNWMrkTxRFIRAI
      5GgSTqcTi8WCwWBAlmWCwWBOAMo5s5AV4nIKoCfCZoJ3+oO8diLJV6+tLThF8tf82zd9fO/U
      3BUf4FOebv7+rhZstpkLk6qqvNM9zLKmKuKxKA11taiqyo9eOsSda1tYWD8/s7YymQxfeKKX
      JyJt/HTtc6yuyI5nUjSBDG0s6rj+kkiISQCalmFseISUAovrK3i1O0izVaaj0Yk/GMBvE3FW
      2An4g6iqRjiaYGGlkf6RMRBirLpqJUf27UBISgh2D3ZLdrceHznBbe+/j907trO+2cVPnunl
      hoY6rBaBI/t2Y29ZizFzgo7V6wl6x5E0cNfXTQlNGQwG3G43gUAARVGIRCKIoojFYkEQBFwu
      F7IsEw6XHqWpC/Z0Aj4bBdjU5mbzosLrixXqY8uN/HQ0SMgw8+ZgC2JHMQkKgirzcLvCV25f
      NmsOvSiKXL0se0JXVjhyr3329vL8oLnAaDRydYWfhdVeDN1v8vsMeAwCDSs6qLcfZ3x0AU5X
      PU7nxZ0XEJLJpGYSVQIJDZMax2Bz4j0VREx5efqZ33PbAx/F7bBR6bQy0HsUV91CXn/xtyxf
      t4kmjwPJ7qb/2FEWd3YQDScJB8aQ7G6a6qrxB0J4qirx+Xx4qqro7z2Kraoe/+gQTYs68Y30
      43B7sFVUEgn6yiqAjmQySTCYHa6tC77eRkPTNGKxWC5/kI9SWWF9Dd2f0NeYTUSp3Hr6///F
      q6d41LdiRu+tyYyzJnOYP9tkpn3xYurq6i56O/rR5/awpLYP7/bf47c5cCXjNG1YQ5tLIpxa
      SHXdGurqLr4RWPm4aJ1gmBRIXUBTqRSBwOTYHZPJRGVlZU5QNE0jGo3mqBQ6yikATAptqRNg
      NqdC/lo6RgMxPva6mSPK9CS9pswwa5P7+MIGJ9dds2UKJ+pixYM/7+b+jh60d5+h9drVjO3Y
      z4Bi5/ZrO0nJHaxcff1Fr8S5Jz1x6iQDAycQUBHIIAgyoCCQzr4mpBCQEVEQSIGgIpICFEQy
      2fcgI5LMvk9II2THQyCQJDsxIHH6ukx2DRQMJLJrCCnixodZuPL/yd2c/vB0SoQsy4iimBNo
      3SfIv95utyOKIplMJucYz0SQp/MdSqHUmsVJtoZKO9+7YoL3v+MiaSgdFapODLLFeJQ/3lrN
      1s1XXfQCo0NRFJy+Lt7VBD53yxWIAjRcdyXrgJ6Ym6f7avjH1dOuwM9+8nMe/PjHMZWZ5r1v
      19tEonEWr95MY5UNNI0jR7tYvizbG+rIkSMsX74c78BBApY2Ev17CWgqdfWdLF00s+bMBVuN
      3eGC051qdCUQMCCgIApZ6pMICAgIQrZvTVaIMwikEYU0InFARhSSp5Ung0DsdOVoDIFk0WtR
      QMYgJJhQg1NuUNM0IpEIqVQqVySjC5+qqkQikYL8gCiK2O12FEXJ0afPxqyZDuWUIF+IVyys
      5X9F+/nS4QWExamVUQFzA2utO9m88cZLRvgh65d9/pZlfPA1B4cPpvnMwgNUm+LsDDbwd30b
      SMcSfG3CR31t6VFHgROHqPR42NfVS/DUBFrSSySSJmMw8tD99wAwMh7gzju28Owvn+R3WgUN
      lTYMaoqBnqPEZAmr2UDEexLfqREaNiwg5vOjVDoZOrSNl17NUO+E/v4hOpZ24KhuwZg4hbtp
      MUfefZMVG65n9bLFFycVIh+iKFJRUUE4HM6FQvNNnng8jiRJUyIloihiNBpRlGymdCYRovlC
      vhJomsZty2tZcvQUu7RCBfAkBtkQ38nWDa2XjNmTD6vTTUCVeNHbxIveInqH0c6rx7p5qIwC
      7D82Ql1jPSP9x5FCx2lafzv+3e+iCQoHD+xn5ao1WCWNN1/bzoKlSxg4MIhkdKGl9EGE2e8t
      k8lMPjvByJVbbsQwfAij14k6up8FN9+Ep8LOsy+9ycqOZkRBpKK6geULXBzsOT7pA1yMJlA+
      VFUlnU4TjUZzJlB+SLOysrIgYQPkToF4PI6iKDllKMZccgJnOlWKHeJvvTLBj/xT2zpeG36J
      nzy0hAULzlxddrFB0zT+8D+6+LW3iYRxal/T64RDvPCpZTMMhyoc3LOXqCKxeUNRxCo6yjv9
      aTatOvsajWLktp2a2kZqai/Oyn0gF/aUJIl0Oo0sy8Tj2T6TmqYRDodxOp0FVGiDwYDVakWW
      ZdLpdFkFKHa25wu67wLwmTVmHn8pUJClBahz20il0vP6d88XBEHgL2+pJ/bv7/CUesOUnka7
      042MnfLR1FCbe03TNBRFyVHaVVWluztbMSdZ7VSJ4lRCnaOBTVPrdeYFuW9c0zQO79/NkZ5+
      AEYHj7Nz5x7SmRS79xxAk5PseXcXfYMnZ/1HfOPD7Hp3B/3Dp7KOzIE99A+NcfzYEXbtO8TE
      6CA7d+4inp62DRlAztxxOp0FZo8sywW0CR2CIOB0OnG73RiNxml3+nJmUv5a4ukv6Ewovqa+
      ysntjgEErfAz9sjVVFbOfZDIhUZjTRX3tEvUpYan/M6oprGYC2ufZVkuyMsMDg6SyWRyVJJE
      IsHIyEju+r173uV3zzxNWlXpO3aIl15+iYPd3Tz2s58QkjO8u2M7Tz/7/Jzvv2DL61y2jJA/
      G2ac8HlJRb14IzIoCoJkxmk3lU02TQdPXTO1bjuuykoy6SCCqYaIfwK320U0EGJ8wouSjhII
      zZzUpgu2y+XKHbH6Tl/q2nz+0HSYLheg/262nBp9vb+7vYFfrenibutRDGr2PrvUJob8pQdH
      XCp46M4b2eiZ+tzNSnwKJcJoNGI0GjEYDAiCQDAYLDBdrVZrQai7c0knGUVDFAQS8RjhcJhE
      UqajYwGyqtHQ2MCEzzvne89TAI3du/ezYcM6AGKJDIsbPSQ1CYMooKSTNLR2EA7Mfl6tpir4
      YwpVdiOCIJFMRkmn0xitLhxShvFQkva2RsLR2QmCXkFWkdd3JpPJlBTgTCaTqymYiSKU/Syn
      FUBfZ7r1in0LURTZ3FHLj++u5a0t3by6fh/3uIfY0TV4ziJV5wOCIPDZ9U7a5f6C/qsNVuWM
      zr0esdORTqcLqv9+8atf0tzYjN87zqlglKqqKoKnRjjWc5zenl5OnBjCoCpzfn45J1jTZA7s
      2Y/RWUlDTSVmg8bAWJDmagc9/UPUNbUQnhilbkE7HtfsmI6qkiaR1LBZRUKRJImwF2tlPYnA
      KDHFREttBT0DYyxftoQyIeFpoSgKPp8PVVUxm8243e4pAqmqKtFoVvHyi2xKPbgzOcX5yTMd
      +SWV+dfl/1dHMX/IarXOiu9zMULTNCa8Xq7/dz895myby79YeJSv3TE9M1SWZfbt25d7dkaj
      kdWrV583HtFFnQmeKfIVALJkObt9qpJqmoYsy0SjUWRZLrBH8zGTqFB+PmI2EaHi1/RGAJcC
      cWwm+Nsn3+E7J1eQFky8vrWPDWumRr7yEQqFiEajueBFMpnE5XKdNw7R/IY9LhD0HV1HPB6f
      kiWGrNAZjUbcbjcOhyNnh5ZabyaZ4zM5zflrlUqYiaKI0+l8zwg/wJZ2Dz9Y2sNPO3bT1lRb
      8hpN00gmk2iaRldXF5FIBJ/Ph8/nIxqN0tXVlecoq7zy+itZrlckyPMvPE8wEuWtN16l5/gA
      +/ftZs/+A3O+30sv+1ICumDrxfOKopBIJMruIvrOazabSaVSKEp5GzI/oTVX6O/Nz1vMd8j1
      YsDEhJfNq9rZMoNAQywWI5lMTvGf9CKndDqN2WzmnW2vc8qXnbb49o4d3HTzTfzif/+QVVve
      T19vV5Yao2nAtLyLsnhPfAt6tng2ppyeV9C7zhWjeOeebbKs1FrFP7+XlGB4eARVU6cdQqJD
      luVcLqAUUVHTtNx3kpZVghNeorEEFqOB0dFRrBVVhAITpNIyqWSCZCo1ZY2ZoowPoOHz+fF4
      phZPBHw+XB5PSc3x+Xwl33M+oAtVMpkkEonk8gV6a8VywqvXFyQSiZK7vL5DFZ8Esy3EL84M
      66eQ233p5gDOBplMBkVROHr0KEajMRct0k/xFSuyNHJBEPD7fQiqgr2yiq5Dh1m5ejX9Pd3U
      Ni4gHvGjCEaa6udGu85VhPV1H0ExOslEToG1ioHeoyxdvADF5MqVSR4/dphXXtvB++6+hYH+
      kyxpb6O7+xh1FSKvHIngMYZprG+muaWOUW+M9VesOu9HjKZpZDIZgsEgqqpiMBhwuVxTaBLF
      7wkEAiXLKou70+UzVGcK/Vp9V9OVx2w2U1l5cbV9P5+IRCKk02mSyWTu9E6lUtjt9vO2MZyu
      BIHuvkE62uoZG/Vx5PAhQKO7byivRljjaO8JWpvr2LZtO4Kc4NjxE6TCo4xHoXXRIiwWO4ZE
      gPFIkpDfhzxzGZk36Durzg1SFIV4PH7GDK/T6SxpkuSHS/U19ISbLMtTmnaVy0PA5Ck1E+f5
      PwNUVaW3t7ekE6zTXEZGTrB7z97Tz05h//79KJpG77GjhKNxxkaHGRkbn/M95J0Ah1HNTvwn
      hzE73dgsJgxKirRmOH0zRqxWjQlvjM7F9fSPBKh12/EF/DS2dTJ8vB93lQunBGnJyOjwKTZs
      2ojxApq5enhU07Qp1Ili6OaTXl9cjHzlCAQCBINBrFZrzrypqKjIUbbNZjOhUAiTyUQqlaKu
      rq7AAdaTaRaL5T/1CdDT00Mmk5nig2UyGWw2G4sWLeLxX/wf1m3cQntbK9veeJkFi5ew8523
      qGleQtA7hoiCgsC9d909p3vQeaQs7jzdTq91Zoy7+tPNwhaf/rm5ttD2b1vQOqcbmk/oZLhU
      KoXROH0/fl0gnU5nAeNURzEFQjep9HoEgKGhIRYsWIDX66WxsZGRkRHMZnPJQvyzcaovNPL9
      oFQqRSaTyUW2dFtekqQp5mMx8smC+dAjQQAPfOhhXn7haeoWtJDMKDQ0NJAI+3FV1pAIexFF
      0+ko0NxQNhH27zv6ecc7+boWPI6WyR5Li+1h/qClN/e70CsWMr6sFsclOGnLS4df2cn6u26b
      8w2eLfRow0wjLno/onA4PEUJdKHV5xPoSqGfBiaTCVmWMZvN+Hw+7HY7qVQKt9ud80fyFUBX
      uEsFiqKQTCZJJBIoilLQVr5UBlwPQOhVesXw+Xz09/dPeQbBYJBly5ZRUVHBnj07icQzrOxc
      jMFs5p23d7Dp6q0c2vsudc1txMM+FMHIFWvmFgYtyAOMnOhjIiqzdkUn2yfM/Ghokh4t9x+G
      eJYHdHPNCH9S9fvc7+JPV6Icy+6ICbNGX82k4EhmE9qdKkcP7cdZ00JzfTV9Rw8TzhhoqbZx
      fGicjvZF9PYdp2lhO42182sSzDbJpFMT0ul0LkdQDH2X05mh1dXVOQHQf1ddnS0EsVqtBTtm
      viBcSkUwqVSKUChU4MBXnG6rqNdqhMPhgloJVVVzz1D3sXT/x2Aw4PF4iMfjue4ekH1GDocj
      pxRXXLEx97qiKNx+2+0AbL32htN31npWnyvvG9DwB+M4gfnmJiZ8A/SMhFlRkWUM+vxeJEcN
      Xq8PJRMjJpuwSBrhcGTeFWAu0GuL9dNAR3H1mH5C5HeVKLWW/jvdAc7vancpQE9cQdb0M5lM
      2Gy2AvNF93/0pGL+yaBH5XTioG4W+v1+Tp06VUB+AwiHw1gslikh9XORMS/YgtLpFFrxi/MA
      UTLT1LKQgG8cFjbQ3rmKwaPdjAkaK1qbGD7lpbNjCfsOHYf2i6MyShfq/CJ8mKoExXZ9vjlQ
      qjYhX2h0LtLF7Avou7soirlwsm4GQlYo9b5N+mfXzc5QKJTzD2CSi5VKpTCZTIyMjJTkbDmd
      TkZGRvB4PLz44rPYXdVcvXEDRw7uon94HJfbxcmRMRzuSlJhL2nBxIP33Tenz5dnmAksW9KG
      q7GFmeZTg9GZ9e23uBupsyssbu+gt28ANRPH3bqIzWtXMh7SWNFRR0/fAGvWnqOynxkiX2BF
      UZx2xynO7E53XSmF0AWlHCHvXEE/hfSduhxXSYcgCDlzJz+hmEwmC0wi/Vq9FluSJKqqqnC7
      3bkRVwaDoaDFTbm5D/kKNjg6xMhAH4FEmuGxAHfecSc9+3aw8sqtSGoGR4WHKsfc+7CWdYLf
      7T3JibweU1oiAKcnKFYaU6xx+Tl8bJAVSxaQ7JdQ49kPlhE1InkBF3dLHW2rL6xgzxV6490z
      0abzd7jiJlvFwlWcWbZYLDgcjnNGi9D/vk4/0Kfv6CePfmrpAj5T6Iqrd+qYKdLpdC7UPDg4
      WPKz6yfIsmXL2L7tNYLhOOvWrSOTjnPgUBdLl6/g6KFDVDc0kQh7kTFxyw3Xz/ge8vGeoEOf
      K6TTafx+/xk7y5X7uZQS5Fen6cpQWVk57wqg296RSKQkM1a/Rv9slZWVs27DOBfotr+qqiST
      Sfx+/5QoUDgcZunSpSXvRw9OlIsszRbvHTbWPCOfsqujuBJsOuEvfk9x/YCeYdZt7Pk2g3R6
      hx6F0f+W3h1D/1m/x/MVkRJFEbfbjclkIhgMTnGAARwOByMjI7kqvvxnYzKZ5vXEvHTicOcZ
      uqAU2+3FDm++UBebQ/kKYTAYppwG+n9jsRiSJM2rEJa693zoP+vO7fmEJEnY7faCQphieL1e
      bDYbx3uP0X9iiA89/DD+0RPsPnCEzmXLGR0aRhFEMvEgGcHMnbfeMqd7uXwClIEew85HPn3X
      YrEUHNH5zuV0JlP+f/Pt81AoNK9h0XzzZjrYbLZcq/nzCb2hWTkYDAYURWFxRydGi4l0PM6B
      I73ceced9Pf0UOEwEYom8AeCBAL+Od/HZQUoA6PRmOs8DUyx7WOxGLFYLCfw+SS34v/P3/WL
      zaf8WHkoFJoVy7Qc9AjTTKBHds53bYLFYpn2HlVVxeVyMTbcx6atN5BJxqmvdfPMc89gtNrx
      BePEg15SaRk5ncptWKlUalYm5WUneBooioLf7885kflmzUwecL5g6dnPfPMn34TSr/d4PGdt
      CmmaxsTERFnnV4feQOBClWTu27cPs9lcMgqkKAorV66c4lfl8490+rrBYMDn8+FyuQqepX5K
      T8cDu+wDTAO9liAUCp1RmMopRrHSFEeD9Nd1rlA6nT4rBdBNKp1odqYcxYVMwq1dO/uhHbpg
      5xfR6yWwLper4HPrLTGtVisGg6GkIlxWgDPAZDLh8XjIZDLE43FSqVRJdme5ZFI+47GY/Vjq
      /2OxGAaDYdbT7vV70Dk7MzGlLhUqRjHyP1t+dC3/9/rpq7fENJvNKIqCyWQq5GOd1zu/RKHz
      V0wmE/F4nFAoBEzd0Uuh2MQpJsYVK46mabm2LfogwHL2ef5ur+9u5Uo785G/G17MNIx85LNP
      9UyxXo8Rj8dzSbxiX03nXCUSCRKJBJIk4Xa7c8/0sgLMAoIgYLPZSKVSU8on8+35UjXEUHgC
      lFKM/C9Mr2LTzTBJknLX6E5eMpnM0Ql0Z7YcvUCH3olB76Z3IRQgv7GxIAg5hSyXVdY0DZ8v
      y0TWw8WiKKIoSkFfUX09SZJyp0Q+1yi/SfJlBZgjBEHA7XbnMpJ6aeR0nB/9ffrP0znS+XQK
      yO584XA4x7TMTwzlvz+/J2q5hJxuF9fU1OSU60JA3yDyR1npp2xF0eR6/frq6mqSyWSuwbF+
      QuqRukAggKqqWK1WnE5nTgHy/Sk9TJ3/2uUo0DxAf7B+v39au7pcthgKo0LFHKPiNfTrdUUp
      Zqv6fL4pwp1MJrFardjtdiRJoqam5oK3ZcknxJlMplxry9meSropGA6Hc6flTHFZAeYR+szi
      Uh2q81GcECtVG5B/rBefFNNFd1RVzc1KyEcikciZGUajkerq6kvG/p8J9A1ktkp92QSaR+gU
      4Hg8TjKZLKsIxfyi4nwATN3Vi6/Pv04XZH2Kpj45sxwV4lKqRJsppjtdp8N770lcYIiiiMPh
      wGazIcsyyWSyYJJNMX9If326cF4pPlIpZ9psNmO323MRkmLF0d9zqYY/zwUuK8A5gl4QrlMq
      dGdZ5+Xn0yVgai2BjmKHufiIL1YOp9OJLMvEYrFcWScUnhRn6pDxnwmXFeAcQxCEXB0tZAUx
      FouRSqVyMXwdxTkB/TTRw335RLtSJ4C+htFoJBKJYDabc86wvusbjUbsdvt7yv4/G1xWgPMM
      vSW6zWbLZZZLUa/1OltdcfRIRzAYLLhWN2305JwOPb6uv1dVVWRZzkV/ytEgiusE9JNprjb2
      xY7LUaCLAHp1lJ7g0rkupYROURRCoRCpVCqnBHqms1RxiQ5RFEmlUjidTmKxWK6TXXEGNZPJ
      FPCeNE3DbDYjSVLBQPL3Ci4rwEWGmRDUVFXNdbTWSwyrqqqmfY+eMBofH8dsNufaRBbzasqF
      V/UEoL7Oe0URLptAFxlmIlg6lUEnv81kzXg8TjAYzPFgSkWeSnGWdGiaRigUIpFIkEwmqamp
      eU8405cLYi5RCIKQGwpSKvlTXIscj8en1BqU6naR71yLokgoFMrN7w0EAoyMjMy42ORSwOUT
      4BKGfhLoXddKUbJ13kw4HMbhcJTkEeVfm0/djsViOByOXM2y7mPkD7S41HH5BLjEIYoiCxcu
      zA39K47YiKKIz+ejpaUl1yLlTJwknVWayWSQJClXVTVdvfOlistO8HsEepg0nU7nTJtEIoHX
      68Xtdud27Gg0mqNEm83mnFOrh1b1yTpOp7NkXx69bHM2TbQuZlxWgPco9LoBnY6R3wpRPwF8
      Ph9VVVU5wbdYLLlOzaVoG4KQncbp8XjeM1EgIZPJaJe5IZfxnxWC9l5y6S/jMmaJ/x/H6qBv
      ptKeKQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      pZDPAiKXn/gkn3r2icGnFTyx4kA7dRmlAEeeE9QqFVK1TFkUKVRqqHQ6opHwfbY934df7sUj
      jIwLl69x69aHsJt0oDMzbtUDJtqtHO22SKcHCq0NoZ2lr9ShGsSBlOZxqqkgrUaFUk1kYW4C
      pc7BxSuPszrrYmzchVKAVlfg1tNPQ95PrPI3pR5N4/Pkwh7EWhFUBvQWO9WCLAvpC8W5dmnt
      bSSgtRhVLdKlGun71t4HRx6uXb+OTv3ej4TBMsbTt26xs3n7Lf/f67bpdHtse2KsLC1it+m4
      dv0a169cBHSMj7+Vh2yzWjAPCnY7rFbmVy9x6+lb9PNBesYZJsdscveHtv0JQHqEkdCoFKRK
      ozP8PZfLDX9uNarS9s6uJLZ7kiRJUimXkgqV5ls+VymkpYNj3/D3WMgnHXp8Ur9/X1v9vuTz
      HEiBSOIt185kMsOfq8WstLt/LPX68u+RwIkUT+elWikr7R+dStlBW/f3T+r3Je/xvhSMJiVJ
      6ki5XEnqtZvSzs6OlMumpUbnzc+/3b9tsSZtb21JxWrjLf36+l/9ubS7sy3ly3XZRtWitLm1
      LVWbLamUy0kd6a3oNCpSqdaSu9TrSkd721I0mZUkSZKCp0dSIpuXcrnCW/t+zngUCHuEc4P3
      9JTVtbNndr6feDQBHuGnGo98gEf4qcZbJkC/1zuTbk2/3z9rf/5W4KdhnD8NY4QfmQDx4DHV
      MySG/rSspn4aHo6fhjHCYAJ0Oh06nQ4KxftLholFIvTok88XOd7fJprMkc3KzKt7/zarRert
      PkhdgsEw+9ubZApV6uU81VqVUCxFv10nEJG1O++18064124+/4i3/AiDSPDh4R4A16+/vzTI
      nbsvkao+RTocB6lF1x+m0+3zK7/yS3LovlXj9Ze/x8rHfx0pfAfHpescHfuIhr7DxJgWwTzF
      C3d8fP7JeV47ibA09ysEIkm6/jDNC0s0ugq69Qo29yRSXwn9FtlsllI2yfdf3+a/+s///vs6
      3kd4+KAAkMQagUCY/7+9M+uN48oO8Fd7VW/spkhxVYukVksj2LMYthyMHWgGcAbjABMF8GxI
      MECQPMxjgCC/ID8hgzwFyEOCBMj4IcvLODMYCxiNLMmyNo+1mGuTTVFceu+q7lpuHopsiRIp
      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
      LNdA8AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Deaths by year and state' width='192'>
      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
      5aXm/wOGv08n14G1kAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Heat Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map based deaths' width='192'>
      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
      Bw9OhnMG2Fn9AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Providers Total claims per year line graph' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='donut chart OPR' width='192'>
      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
      TQIQWvs/M+xzwTwOBCIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='opr vs deaths map' width='192'>
      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
      CmANc07bAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='tree map most prescribed drug' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAMuElEQVR4nO3ayW8jV2LH8S+X4r5poUiKWpraW+rFk7EHAWIgl2QuQS455pQ/xf/KXAYY
      YOY0f8TYSdqeVrfUrbW1kNq4iDuryCKZg+yGJ+kAdmCbE7/f50ZRwHuqqi/r1aM84/F4jIih
      vJOegMgkKQAxmv/bL77a3ePV3ttJzUUMsrWxymg8mvQ0/jKA3ddv+N0f/jipuYhB/vmf/oHh
      yJ30NLQEErP5P/TDUCjIcDgiHAri9XqpN5ok4jHy8zkazSZ35SpPtje4uLyi0Wyxub7C2UWR
      fn/AxlqBk9Nz5nMZur0ezWabzY1VDo9PcZz+w++eF4nFolSqNWLRCLFolLm5WQ4OT+jZNuFw
      iGAwQL3eZHkxT8+2SSUTBAIBOp0uU6kkl6UrXHeIbTuEwkFs22HoDpmeTtHt9vD5fPR6NoGA
      Rafbez/HZCLO9FSKw+N3BAMWo/EYDx7W1wqUy1VGoxE3d2Vi0SitdvunPh/Gua9Vubm+JpFI
      0h/0CQaC5PJ5atUqyVSKaqXCXCZDrVohHk/Q6XSIxWK0Wi1q1QqF1TUGgz7FiwsKK6v0ej1i
      8Tjj8ZhOu00wFGLounS7HeyeTSKZJBaPvx//gwGkZ6bp9mwW8jkajSbzuQz39QaBgEUsGiEU
      DNJotCgsLzIajTg8fsfTnS1c12XvzSHZTJrReMx8NkMsGuX65pYn25u4rsvbwxOePtliMBiQ
      TMSJRiPYts2fd/fej19YWiQYCnAdLOP1emk0WkxPTfF6/wCAZDJBuVLjF8+fYNs2o9GIQCDA
      YDAgFo3iDoc4joPf78fn8+LxeDk8OuHpzhaO43Dy7oLtrXX6/T6DgctwNOSyeEW1ds/ff/q3
      eH1eZqZS7Op56Ec3NT3D3e0tuXyeo4O3DN0hfcfh8vwMu5fh4vyMSDTK0cEBaxub3FxfEY/H
      6fV6rKyucfhmn4HrsrG5xcHbN3i9Xra2dwAoXl4wn1+gWilj2zara+ucnhy/fx/+lyWQx+vl
      yfYG+VyGi2KJ9Ow0N7d3ANTu64RCQX750VMGrovH46HT7TLoD2AMtu0QCASo1e5ptTtYlp/x
      eEy328Pr9dLt9hgMBnR7NpblJ2BZJOJxPnq2TS47x0I+x9JinnwuSyoZ577ewOn3mc9l2Nna
      eD/HgGUxn51jeTHPaDTC6/Xi8/lw3Yd15XA4wrZt4rEYHg90uj0G/QHRSISN1QJX1zesFpZZ
      W32E1+Nl5/EGucwct3cVMulZ8Hh+tJMuH3Z7c0OlfIfjOHTaba6uSsxlMpydnhCLxxkM+lTK
      d1yVSgAEgkG8Pj9+v59gKITnv52zSvmO46NDHMchEo0SCAb/x5i+zz777LNvXrx8tc/em0P8
      fh+XpRva7Q6NRhPwUG80WVtZJhgMcnZe5OrmFsuyuCtXeLy1Tq1ep1q7Z2tjlWLpms2NVbxe
      Lze3ZdZXH1G7b3BXrrL9eJ1qrU632+Pq+pb07Aytdhu/36JUuqHVatPudDg+PaPf77PyaAmf
      34dl+RkOh5QrVYLBIOPxmLOLIvVmC9d1abXbuO7DJ7/tOPS6PS5L1+Tns5y+u2D78Tq1+zqN
      Zos3h8cM+gOarTZX17f0BwPi8RitVgen71Ct3RMOhahUaz/qCTfZ5sYK4693gfp9h1g8TiAY
      IDU1RafdZnN7h2Qqic/nZ+i6ZLI5Ou0220+eEo6EGbpDbm+uyWRz+H1+Li/OyebmaTYb2HaP
      ZDKF5bdYXHq4ZluNJq1Wi/EY7ms1pqan8Xg8eL79TfBvfvt77QLJT0K7QCJ/BT74EAywvbVO
      pXrP1FQSxmMOjk5JJuJsbaxyenZJZm4WD1C8uqHwaImDoxM6nS6/eLaD0+/TaLaYz2Uolq6Z
      z2Vpt9scHJ3+hH+a/H/g2Danx0dEYzGGwyGO7bC5vY07GLC/95rlRwVKxUui0SjLhRW++s//
      4Pnf/PLhmnyzTygcIRAMUi3fsbj8CMexcV2XxaXl7zT+B+8AiUScUDBIIh5jfbVAOBwCIBIJ
      Ax7C4RCDgUt/MOD508cAhL5+wAiFQgSsh90in89HJj1Lq9Vmdmb6Bzhc8nMTCAaYX1zEcfqM
      RiMisSiO41CtVnlUKHB8dEg8nqBWq1G8OMfn8zEej+nZPYKhMI1Gnfl8nnAkSiQapVGv03ec
      7zz+BwOYmUoRiYTJzM1SrlQZukMsy0+70+Xl633msxnC4RDhcIh2u8vJ6RnZTBqPB94eHmMF
      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
    </thumbnail>
  </thumbnails>
</workbook>
